var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/GetPageFunc.html",[0,1.141,1,0.925]],["body/interfaces/GetPageFunc.html",[0,1.084,1,1.201,2,2.207,3,1.084,4,1.084,5,0.879,6,1.685,7,1.239,8,1.685,9,1.084,10,2.422,11,2.301,12,2.301,13,1.481,14,2.816,15,2.816,16,2.523,17,2.241,18,2.241,19,2.523,20,2.241,21,1.239,22,2.241,23,2.241,24,2.241,25,2.241,26,2.816,27,2.241,28,2.241,29,2.816,30,2.816,31,1.469,32,2.816,33,2.948,34,2.816,35,2.816,36,0.708,37,1.481,38,2.207,39,2.207,40,2.207,41,0.082,42,2.422,43,1.481,44,1.341,45,1.341,46,2.301,47,1.685,48,0.055,49,2.301,50,1.084,51,1.832,52,0.04,53,0.055]],["title/classes/InFlight.html",[54,0.457,55,0.925]],["body/classes/InFlight.html",[1,1.077,3,0.421,4,0.421,5,0.341,7,1.079,9,1.328,10,0.882,13,1.651,14,1.697,15,1.108,16,1.512,17,0.882,18,1.512,19,0.882,20,1.984,21,1.079,22,0.882,23,0.882,24,0.882,25,1.642,26,1.108,27,0.882,28,0.882,29,1.108,30,1.108,31,0.578,32,1.108,33,1.442,34,1.108,35,1.108,36,0.275,37,0.713,41,0.084,42,1.841,43,1.55,44,1.147,45,1.147,46,1.697,47,0.654,48,0.074,49,0.654,50,0.421,51,1.512,52,0.034,53,0.026,54,0.372,55,0.752,56,0.341,57,0.52,58,1.108,59,1.697,60,2.093,61,1.697,62,1.451,63,2.703,64,1.888,65,3.905,66,1.888,67,2.703,68,2.223,69,1.451,70,2.493,71,2.63,72,2.223,73,1.108,74,1.451,75,1.442,76,2.042,77,0.856,78,1.697,79,1.372,80,1.108,81,1.351,82,2.223,83,0.991,84,1.697,85,0.856,86,1.697,87,0.882,88,0.882,89,1.147,90,1.75,91,1.697,92,2.488,93,0.856,94,1.108,95,2.063,96,1.108,97,1.108,98,1.108,99,0.856,100,1.451,101,2.313,102,0.856,103,1.451,104,2.223,105,2.223,106,1.108,107,1.451,108,1.451,109,1.451,110,1.147,111,1.697,112,2.703,113,0.856,114,0.856,115,1.351,116,1.108,117,1.697,118,1.888,119,1.108,120,1.351,121,1.108,122,1.108,123,1.451,124,2.88,125,0.856,126,1.451,127,1.697,128,1.108,129,1.451,130,1.108,131,1.451,132,1.451,133,1.451,134,1.108,135,0.882,136,1.108,137,1.108,138,1.415,139,1.108,140,1.451,141,1.841,142,1.642,143,1.451,144,1.451,145,1.451,146,1.442,147,1.147,148,1.147,149,0.856,150,0.856,151,1.512,152,1.697,153,2.223,154,0.856,155,0.856,156,1.108,157,1.108,158,1.451,159,1.108,160,1.451,161,0.882,162,1.451,163,1.451,164,1.451,165,1.451,166,1.451,167,1.451,168,1.451,169,1.092,170,1.451,171,1.451,172,1.108,173,0.713,174,1.451,175,1.451,176,0.856,177,0.856,178,1.077,179,1.451,180,0.856,181,0.856,182,3.156,183,0.856,184,0.856,185,0.856,186,0.856,187,0.856,188,0.856,189,0.856,190,0.856,191,0.856,192,2.223,193,0.856,194,0.856,195,0.856,196,0.856,197,0.856,198,0.856,199,0.856,200,1.888,201,0.856,202,0.856,203,0.856,204,1.451,205,1.888,206,0.654,207,1.451,208,0.856,209,1.888,210,1.512,211,0.856,212,1.451,213,3.266,214,2.223,215,1.451,216,0.856,217,1.888,218,0.856,219,0.654,220,1.451,221,1.451,222,0.654,223,1.888,224,1.108,225,0.856,226,0.856,227,2.488,228,0.856,229,0.654,230,0.856,231,0.52,232,0.856,233,0.856,234,0.856,235,0.856,236,0.856,237,0.654,238,0.856,239,0.654,240,0.52,241,0.654,242,1.888,243,0.856,244,0.856,245,0.856,246,0.856,247,0.856,248,0.856,249,0.856,250,0.856,251,0.856,252,0.856,253,0.856,254,0.856]],["title/classes/InFlightState.html",[54,0.457,178,0.925]],["body/classes/InFlightState.html",[3,0.909,4,0.909,5,0.737,7,0.855,9,0.909,13,1.952,36,0.594,37,1.309,41,0.084,43,1.309,48,0.071,50,0.909,52,0.034,53,0.048,54,0.364,55,1.36,56,0.737,60,1.896,76,2.198,79,1.061,81,2.289,83,1.441,87,1.619,88,1.896,89,1.619,90,2.553,101,2.762,115,2.074,120,1.619,135,1.619,138,1.309,141,2.496,142,1.896,146,2.034,147,1.619,148,1.619,151,2.198,161,1.619,169,1.309,173,1.309,178,1.061,231,1.619,239,2.034,240,1.896,255,2.289,256,1.125,257,1.851,258,2.383,259,1.896,260,2.198,261,1.851,262,2.664,263,2.606,264,2.664,265,2.034,266,2.034,267,2.034,268,1.851,269,2.664,270,2.664,271,2.664,272,1.851,273,2.034,274,2.034,275,2.034,276,2.034,277,2.034,278,2.034,279,1.619,280,1.619,281,2.034,282,2.034,283,2.034,284,2.034,285,2.034,286,1.851,287,1.851,288,2.034,289,2.034,290,2.034,291,2.034,292,2.034,293,2.034,294,2.034,295,2.034,296,2.034]],["title/classes/PagedResults.html",[21,0.746,54,0.457]],["body/classes/PagedResults.html",[3,1.156,4,1.156,5,0.937,7,1.353,9,1.156,21,1.01,36,0.755,37,1.546,41,0.084,42,2.732,44,1.43,45,1.43,48,0.057,50,1.156,51,2.155,52,0.043,53,0.057,54,0.463,56,0.937,75,1.796,76,2.301,78,2.403,79,1.254,80,2.403,83,1.508,110,1.43,138,2.176,169,1.995,173,1.546,219,2.403,297,2.398,298,1.43,299,4.214,300,3.147,301,3.147,302,3.147,303,2.353,304,2.353,305,3.147,306,3.147,307,2.353,308,2.353,309,2.353]],["title/changelog.html",[310,0.966,311,1.194,312,1.965]],["body/changelog.html",[31,1.334,41,0.071,48,0.061,52,0.061,53,0.071,259,2.034,279,2.034,280,2.034,313,3.348,314,2.999,315,3.348,316,3.348,317,3.348,318,3.348,319,3.348,320,3.348,321,2.556,322,3.348,323,3.348,324,3.348,325,3.348,326,3.348]],["title/coverage.html",[327,1.896]],["body/coverage.html",[0,1.494,1,1.212,5,1.212,6,2.322,7,0.976,8,2.322,21,0.976,41,0.081,48,0.055,52,0.055,53,0.067,54,0.787,55,1.212,57,1.848,79,1.212,83,1.212,178,1.212,206,2.832,255,1.848,256,1.848,297,1.848,298,1.848,327,1.848,328,1.848,329,3.042,330,3.042,331,4.166,332,3.042,333,3.042,334,3.042,335,3.042,336,2.322,337,2.832,338,2.832,339,3.709,340,2.322,341,3.042,342,3.042]],["title/dependencies.html",[343,1.5,344,2.123]],["body/dependencies.html",[41,0.077,48,0.064,52,0.064,53,0.074,344,2.691,345,3.525,346,3.525]],["title/index.html",[36,0.631,310,0.966,311,1.194]],["body/index.html",[1,0.491,7,1.158,10,1.48,11,0.942,12,0.942,13,1.981,16,1.838,17,1.48,18,1.48,19,1.19,20,1.685,21,0.629,22,0.749,23,0.749,24,0.749,25,1.19,27,0.749,28,1.19,31,0.491,41,0.08,43,0.606,48,0.05,52,0.022,53,0.044,54,0.243,55,1.105,56,0.97,57,0.749,58,0.942,59,1.495,60,1.838,61,0.942,70,2.117,71,1.495,73,0.942,79,1.105,81,1.48,86,0.942,87,0.749,88,0.749,89,0.749,90,1.838,91,1.495,94,0.942,95,1.495,96,0.942,97,0.942,98,0.942,106,0.942,110,0.749,115,1.685,116,0.942,117,0.942,119,1.495,120,1.19,121,0.942,122,1.495,127,2.117,128,2.577,130,1.495,134,0.942,135,1.19,136,0.942,137,1.495,138,1.816,139,0.942,142,1.48,147,1.48,148,1.48,152,0.942,156,0.942,157,1.495,159,1.495,161,0.749,169,1.582,172,1.859,173,1.486,178,0.97,210,1.838,222,1.859,229,0.942,231,0.749,240,0.749,241,1.495,255,1.19,256,0.749,258,1.495,259,0.749,260,0.749,263,2.117,265,0.942,266,0.942,267,0.942,273,2.117,274,0.942,275,0.942,276,0.942,277,0.942,278,0.942,279,1.957,280,0.749,281,0.942,282,0.942,283,1.495,284,0.942,285,0.942,288,0.942,289,0.942,290,0.942,291,1.859,292,0.942,293,0.942,294,0.942,295,0.942,296,0.942,297,0.749,298,0.749,310,0.962,321,2.577,327,0.749,328,0.749,337,0.942,343,0.942,347,1.233,348,1.233,349,1.233,350,1.233,351,1.233,352,1.233,353,1.958,354,1.958,355,1.233,356,1.233,357,1.958,358,1.233,359,1.233,360,1.958,361,1.495,362,1.233,363,1.233,364,1.958,365,1.233,366,1.958,367,3.025,368,1.233,369,1.233,370,1.233,371,1.233,372,1.233,373,1.233,374,1.958,375,1.233,376,1.233,377,1.958,378,1.233,379,2.435,380,1.233,381,1.233,382,1.233,383,1.958,384,1.233,385,2.435,386,1.233,387,1.233,388,1.233,389,1.958,390,1.233,391,2.773,392,2.435,393,1.233,394,1.233,395,1.233,396,1.233,397,1.233,398,1.958,399,1.233,400,1.233,401,1.233,402,1.233,403,2.435,404,1.233,405,0.942,406,1.233,407,1.233,408,1.233,409,1.233,410,1.233,411,1.958,412,1.958,413,1.233,414,1.233,415,1.233,416,1.233,417,1.958,418,1.958,419,1.233,420,1.233,421,1.233,422,1.958,423,1.233,424,1.233,425,1.233,426,1.233,427,2.435,428,1.958,429,1.233,430,1.233,431,1.233,432,1.958,433,1.233,434,2.435,435,1.233,436,1.958,437,1.233,438,1.233,439,1.233,440,1.233,441,1.233,442,1.958,443,1.233,444,1.233,445,1.958,446,1.233,447,0.942,448,1.233,449,1.233,450,1.958,451,1.233,452,1.958,453,1.233,454,1.958,455,1.233,456,1.233,457,1.958,458,1.958,459,1.233,460,1.958,461,1.233,462,1.958,463,1.233,464,2.435,465,1.233,466,1.233,467,1.233,468,1.233,469,1.233,470,1.233,471,1.233,472,1.233,473,1.233,474,1.233,475,1.233,476,1.233,477,1.233,478,1.233,479,1.233,480,1.233,481,1.233,482,1.233,483,1.233,484,1.233,485,1.233,486,1.233,487,1.233,488,1.233,489,1.233,490,1.233,491,1.233,492,1.233,493,1.233,494,1.233,495,1.233,496,1.233,497,1.233,498,1.233,499,1.233,500,1.233,501,1.958,502,1.233,503,1.233,504,1.233,505,1.233,506,1.233,507,1.958,508,1.233,509,1.233,510,1.233,511,1.233,512,1.233,513,1.233,514,1.233,515,1.233,516,1.233,517,1.233,518,1.233,519,1.233,520,1.233,521,1.233,522,1.233,523,1.233]],["title/license.html",[310,0.966,311,1.194,524,1.5]],["body/license.html",[31,1.366,41,0.062,48,0.049,52,0.049,53,0.062,84,2.048,111,2.048,237,2.048,314,2.048,328,1.63,361,2.048,405,2.048,447,2.048,524,2.048,525,2.682,526,3.779,527,2.682,528,2.682,529,2.682,530,3.428,531,2.682,532,2.682,533,2.682,534,2.682,535,2.682,536,2.682,537,3.428,538,4.376,539,2.682,540,2.682,541,2.682,542,3.779,543,2.682,544,3.428,545,2.682,546,2.682,547,2.682,548,2.682,549,2.682,550,2.682,551,2.682,552,2.682,553,2.682,554,3.428,555,2.682,556,2.682,557,2.682,558,2.682,559,3.428,560,3.428,561,2.682,562,2.682,563,2.682,564,2.682,565,2.682,566,2.682,567,2.682,568,2.682,569,2.682,570,2.682,571,2.682,572,2.682,573,2.682,574,2.682,575,2.682,576,2.682,577,2.682,578,2.682,579,2.682,580,2.682,581,2.682,582,2.682,583,2.682,584,2.682,585,2.682,586,2.682,587,2.682,588,2.682]],["title/modules.html",[589,2.382]],["body/modules.html",[41,0.074,48,0.065,52,0.065,53,0.074,589,2.72]],["title/overview.html",[590,2.382]],["body/overview.html",[0,1.726,41,0.073,48,0.064,52,0.064,53,0.073,56,1.399,224,2.682,590,2.682,591,3.513]],["title/miscellaneous/variables.html",[592,1.5,593,2.123]],["body/miscellaneous/variables.html",[36,1.033,41,0.082,48,0.058,52,0.058,53,0.07,83,1.529,141,1.956,151,2.332,210,1.956,260,2.332,336,2.457,338,3.241,340,2.457,592,2.457,593,2.457,594,3.218,595,3.218,596,3.837,597,3.837]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":206,"title":{},"body":{"classes/InFlight.html":{},"coverage.html":{}}}],["0.1.1",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":313,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":323,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":224,"title":{},"body":{"classes/InFlight.html":{},"overview.html":{}}}],["1.1.9",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":314,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["25",{"_index":468,"title":{},"body":{"index.html":{}}}],["28",{"_index":324,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":591,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["_clearpagesubscription",{"_index":216,"title":{},"body":{"classes/InFlight.html":{}}}],["_currentpage",{"_index":188,"title":{},"body":{"classes/InFlight.html":{}}}],["_getpagefn",{"_index":186,"title":{},"body":{"classes/InFlight.html":{}}}],["_pageobssubscription",{"_index":185,"title":{},"body":{"classes/InFlight.html":{}}}],["_perpage",{"_index":187,"title":{},"body":{"classes/InFlight.html":{}}}],["_results",{"_index":184,"title":{},"body":{"classes/InFlight.html":{}}}],["_state",{"_index":183,"title":{},"body":{"classes/InFlight.html":{}}}],["_triggerresultschange",{"_index":251,"title":{},"body":{"classes/InFlight.html":{}}}],["_triggerstatechange",{"_index":253,"title":{},"body":{"classes/InFlight.html":{}}}],["above",{"_index":405,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessors",{"_index":74,"title":{},"body":{"classes/InFlight.html":{}}}],["action",{"_index":583,"title":{},"body":{"license.html":{}}}],["actions",{"_index":162,"title":{},"body":{"classes/InFlight.html":{}}}],["actual",{"_index":464,"title":{},"body":{"index.html":{}}}],["actually",{"_index":283,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["add",{"_index":28,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["added",{"_index":436,"title":{},"body":{"index.html":{}}}],["adding",{"_index":401,"title":{},"body":{"index.html":{}}}],["additional",{"_index":412,"title":{},"body":{"index.html":{}}}],["again",{"_index":490,"title":{},"body":{"index.html":{}}}],["allows",{"_index":397,"title":{},"body":{"index.html":{}}}],["already",{"_index":380,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":552,"title":{},"body":{"license.html":{}}}],["angular",{"_index":23,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["angular4/angular5",{"_index":451,"title":{},"body":{"index.html":{}}}],["api",{"_index":461,"title":{},"body":{"index.html":{}}}],["applications",{"_index":353,"title":{},"body":{"index.html":{}}}],["approach",{"_index":372,"title":{},"body":{"index.html":{}}}],["arising",{"_index":586,"title":{},"body":{"license.html":{}}}],["array",{"_index":302,"title":{},"body":{"classes/PagedResults.html":{}}}],["arrived",{"_index":241,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["arrives",{"_index":97,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["associated",{"_index":539,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":400,"title":{},"body":{"index.html":{}}}],["authors",{"_index":577,"title":{},"body":{"license.html":{}}}],["available",{"_index":262,"title":{},"body":{"classes/InFlightState.html":{}}}],["backend",{"_index":282,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["bash",{"_index":453,"title":{},"body":{"index.html":{}}}],["basic",{"_index":465,"title":{},"body":{"index.html":{}}}],["before",{"_index":445,"title":{},"body":{"index.html":{}}}],["beginning",{"_index":429,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":92,"title":{},"body":{"classes/InFlight.html":{}}}],["behaviorsubject(this._results",{"_index":194,"title":{},"body":{"classes/InFlight.html":{}}}],["behaviorsubject(this._state",{"_index":191,"title":{},"body":{"classes/InFlight.html":{}}}],["beware",{"_index":517,"title":{},"body":{"index.html":{}}}],["binding",{"_index":477,"title":{},"body":{"index.html":{}}}],["block",{"_index":295,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["boolean",{"_index":101,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{}}}],["box",{"_index":369,"title":{},"body":{"index.html":{}}}],["builds",{"_index":129,"title":{},"body":{"classes/InFlight.html":{}}}],["call",{"_index":25,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["called",{"_index":105,"title":{},"body":{"classes/InFlight.html":{}}}],["calls",{"_index":496,"title":{},"body":{"index.html":{}}}],["canceled",{"_index":122,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["cancelled",{"_index":133,"title":{},"body":{"classes/InFlight.html":{}}}],["care",{"_index":276,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["carried",{"_index":446,"title":{},"body":{"index.html":{}}}],["case",{"_index":87,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["cases",{"_index":279,"title":{},"body":{"classes/InFlightState.html":{},"changelog.html":{},"index.html":{}}}],["cause",{"_index":472,"title":{},"body":{"index.html":{}}}],["chaining",{"_index":495,"title":{},"body":{"index.html":{}}}],["change",{"_index":95,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["changelog",{"_index":312,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":61,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["changing",{"_index":289,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["charge",{"_index":534,"title":{},"body":{"license.html":{}}}],["check",{"_index":305,"title":{},"body":{"classes/PagedResults.html":{}}}],["chnage",{"_index":473,"title":{},"body":{"index.html":{}}}],["claim",{"_index":580,"title":{},"body":{"license.html":{}}}],["class",{"_index":54,"title":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{}},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":56,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"index.html":{},"overview.html":{}}}],["cleaner",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":70,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["clear(cleardata",{"_index":100,"title":{},"body":{"classes/InFlight.html":{}}}],["cleardata",{"_index":71,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["cleared",{"_index":98,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["code",{"_index":509,"title":{},"body":{"index.html":{}}}],["combined",{"_index":421,"title":{},"body":{"index.html":{}}}],["communicate",{"_index":166,"title":{},"body":{"classes/InFlight.html":{}}}],["complex",{"_index":512,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":63,"title":{},"body":{"classes/InFlight.html":{}}}],["concatenate",{"_index":238,"title":{},"body":{"classes/InFlight.html":{}}}],["concept",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":558,"title":{},"body":{"license.html":{}}}],["connection",{"_index":587,"title":{},"body":{"license.html":{}}}],["consider",{"_index":424,"title":{},"body":{"index.html":{}}}],["considerations",{"_index":416,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":407,"title":{},"body":{"index.html":{}}}],["const",{"_index":222,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["constructor",{"_index":75,"title":{},"body":{"classes/InFlight.html":{},"classes/PagedResults.html":{}}}],["constructor(total",{"_index":300,"title":{},"body":{"classes/PagedResults.html":{}}}],["contract",{"_index":584,"title":{},"body":{"license.html":{}}}],["conventional",{"_index":358,"title":{},"body":{"index.html":{}}}],["copies",{"_index":554,"title":{},"body":{"license.html":{}}}],["copy",{"_index":537,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":526,"title":{},"body":{"license.html":{}}}],["correct",{"_index":431,"title":{},"body":{"index.html":{}}}],["correctly",{"_index":377,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":327,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":78,"title":{},"body":{"classes/InFlight.html":{},"classes/PagedResults.html":{}}}],["created",{"_index":428,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":128,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["current",{"_index":142,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["currentpage",{"_index":484,"title":{},"body":{"index.html":{}}}],["damages",{"_index":581,"title":{},"body":{"license.html":{}}}],["data",{"_index":13,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["data.entities.length",{"_index":247,"title":{},"body":{"classes/InFlight.html":{}}}],["data.page",{"_index":227,"title":{},"body":{"classes/InFlight.html":{}}}],["data.spec.ts",{"_index":502,"title":{},"body":{"index.html":{}}}],["data.total",{"_index":243,"title":{},"body":{"classes/InFlight.html":{}}}],["datainflight",{"_index":478,"title":{},"body":{"index.html":{}}}],["dataloaded",{"_index":258,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["deal",{"_index":541,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":588,"title":{},"body":{"license.html":{}}}],["deepak",{"_index":527,"title":{},"body":{"license.html":{}}}],["default",{"_index":260,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":76,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{}}}],["delay",{"_index":506,"title":{},"body":{"index.html":{}}}],["delays",{"_index":522,"title":{},"body":{"index.html":{}}}],["delete",{"_index":442,"title":{},"body":{"index.html":{}}}],["deleting",{"_index":402,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":344,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{}}}],["destruction",{"_index":107,"title":{},"body":{"classes/InFlight.html":{}}}],["details",{"_index":148,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["develop",{"_index":513,"title":{},"body":{"index.html":{}}}],["developing",{"_index":499,"title":{},"body":{"index.html":{}}}],["directly",{"_index":156,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["discard",{"_index":232,"title":{},"body":{"classes/InFlight.html":{}}}],["displayed",{"_index":159,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["distinguish",{"_index":395,"title":{},"body":{"index.html":{}}}],["distinguishing",{"_index":266,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["distribute",{"_index":550,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":328,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["each",{"_index":82,"title":{},"body":{"classes/InFlight.html":{}}}],["edge",{"_index":278,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["empty",{"_index":267,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["end",{"_index":430,"title":{},"body":{"index.html":{}}}],["ensured",{"_index":134,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["entire",{"_index":236,"title":{},"body":{"classes/InFlight.html":{}}}],["entirely",{"_index":489,"title":{},"body":{"index.html":{}}}],["entities",{"_index":138,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"index.html":{}}}],["entities.length",{"_index":306,"title":{},"body":{"classes/PagedResults.html":{}}}],["entity",{"_index":434,"title":{},"body":{"index.html":{}}}],["entries",{"_index":379,"title":{},"body":{"index.html":{}}}],["environment",{"_index":338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":249,"title":{},"body":{"classes/InFlight.html":{}}}],["error",{"_index":231,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["error(`expected",{"_index":234,"title":{},"body":{"classes/InFlight.html":{}}}],["errored",{"_index":88,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["errorobservable",{"_index":66,"title":{},"body":{"classes/InFlight.html":{}}}],["errors",{"_index":86,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["even",{"_index":263,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["event",{"_index":576,"title":{},"body":{"license.html":{}}}],["example",{"_index":64,"title":{},"body":{"classes/InFlight.html":{}}}],["expected",{"_index":274,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["export",{"_index":50,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{}}}],["express",{"_index":567,"title":{},"body":{"license.html":{}}}],["external",{"_index":174,"title":{},"body":{"classes/InFlight.html":{}}}],["face",{"_index":359,"title":{},"body":{"index.html":{}}}],["faced",{"_index":363,"title":{},"body":{"index.html":{}}}],["false",{"_index":141,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":12,"title":{},"body":{"interfaces/GetPageFunc.html":{},"index.html":{}}}],["fetching",{"_index":270,"title":{},"body":{"classes/InFlightState.html":{}}}],["few",{"_index":277,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"coverage.html":{}}}],["files",{"_index":540,"title":{},"body":{"license.html":{}}}],["first",{"_index":117,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["fitness",{"_index":572,"title":{},"body":{"license.html":{}}}],["flag",{"_index":89,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["flags",{"_index":410,"title":{},"body":{"index.html":{}}}],["flase",{"_index":471,"title":{},"body":{"index.html":{}}}],["flight",{"_index":120,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["followed",{"_index":26,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["following",{"_index":361,"title":{},"body":{"index.html":{},"license.html":{}}}],["follows",{"_index":373,"title":{},"body":{"index.html":{}}}],["framework",{"_index":504,"title":{},"body":{"index.html":{}}}],["free",{"_index":533,"title":{},"body":{"license.html":{}}}],["func",{"_index":180,"title":{},"body":{"classes/InFlight.html":{}}}],["func.ts",{"_index":8,"title":{},"body":{"interfaces/GetPageFunc.html":{},"coverage.html":{}}}],["function",{"_index":10,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["functionality",{"_index":514,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":557,"title":{},"body":{"license.html":{}}}],["further",{"_index":370,"title":{},"body":{"index.html":{}}}],["generates",{"_index":505,"title":{},"body":{"index.html":{}}}],["generator",{"_index":515,"title":{},"body":{"index.html":{}}}],["getallimages(page",{"_index":475,"title":{},"body":{"index.html":{}}}],["getmyimages(page",{"_index":492,"title":{},"body":{"index.html":{}}}],["getnextpage",{"_index":72,"title":{},"body":{"classes/InFlight.html":{}}}],["getpagefn",{"_index":124,"title":{},"body":{"classes/InFlight.html":{}}}],["getpagefunc",{"_index":1,"title":{"interfaces/GetPageFunc.html":{}},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"coverage.html":{},"index.html":{}}}],["getresults",{"_index":149,"title":{},"body":{"classes/InFlight.html":{}}}],["gets",{"_index":467,"title":{},"body":{"index.html":{}}}],["getstate",{"_index":176,"title":{},"body":{"classes/InFlight.html":{}}}],["getting",{"_index":310,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["glass",{"_index":293,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["good",{"_index":511,"title":{},"body":{"index.html":{}}}],["granted",{"_index":532,"title":{},"body":{"license.html":{}}}],["happen",{"_index":229,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["hasmorepages",{"_index":259,"title":{},"body":{"classes/InFlightState.html":{},"changelog.html":{},"index.html":{}}}],["help",{"_index":265,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["hereby",{"_index":531,"title":{},"body":{"license.html":{}}}],["holders",{"_index":578,"title":{},"body":{"license.html":{}}}],["http",{"_index":24,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["https://kreatio",{"_index":349,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":96,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["ideally",{"_index":394,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["if(inflight.state.hasmorepages",{"_index":487,"title":{},"body":{"index.html":{}}}],["impact",{"_index":366,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":376,"title":{},"body":{"index.html":{}}}],["implementing",{"_index":493,"title":{},"body":{"index.html":{}}}],["implied",{"_index":568,"title":{},"body":{"license.html":{}}}],["import",{"_index":46,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["important",{"_index":281,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["included",{"_index":561,"title":{},"body":{"license.html":{}}}],["including",{"_index":544,"title":{},"body":{"license.html":{}}}],["inconsistent",{"_index":168,"title":{},"body":{"classes/InFlight.html":{}}}],["index",{"_index":36,"title":{"index.html":{}},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":291,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["inflight",{"_index":55,"title":{"classes/InFlight.html":{}},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"coverage.html":{},"index.html":{}}}],["inflight#resultsobservable",{"_index":197,"title":{},"body":{"classes/InFlight.html":{}}}],["inflight#stateobservable",{"_index":202,"title":{},"body":{"classes/InFlight.html":{}}}],["inflight.clear",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["inflight.getnextpage",{"_index":488,"title":{},"body":{"index.html":{}}}],["inflight.resultsobservable.subscribe((results:pagedresults",{"_index":481,"title":{},"body":{"index.html":{}}}],["inflight.start(5",{"_index":491,"title":{},"body":{"index.html":{}}}],["inflight.start(perpage",{"_index":474,"title":{},"body":{"index.html":{}}}],["inflight.state.dataloaded",{"_index":480,"title":{},"body":{"index.html":{}}}],["inflight.state.inflight",{"_index":479,"title":{},"body":{"index.html":{}}}],["inflight.stateobservable.subscribe((state",{"_index":476,"title":{},"body":{"index.html":{}}}],["inflightstate",{"_index":178,"title":{"classes/InFlightState.html":{}},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"coverage.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{}}}],["initial",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["initially",{"_index":285,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["initiate",{"_index":126,"title":{},"body":{"classes/InFlight.html":{}}}],["initiated",{"_index":131,"title":{},"body":{"classes/InFlight.html":{}}}],["insert/updates/deletes",{"_index":160,"title":{},"body":{"classes/InFlight.html":{}}}],["inserts",{"_index":425,"title":{},"body":{"index.html":{}}}],["install",{"_index":449,"title":{},"body":{"index.html":{}}}],["instance",{"_index":80,"title":{},"body":{"classes/InFlight.html":{},"classes/PagedResults.html":{}}}],["instead",{"_index":235,"title":{},"body":{"classes/InFlight.html":{}}}],["interact",{"_index":387,"title":{},"body":{"index.html":{}}}],["interacting",{"_index":386,"title":{},"body":{"index.html":{}}}],["interaction",{"_index":296,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/GetPageFunc.html":{}},"body":{"interfaces/GetPageFunc.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/GetPageFunc.html":{}}}],["interfaces/paged",{"_index":47,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["issues",{"_index":357,"title":{},"body":{"index.html":{}}}],["issuing",{"_index":469,"title":{},"body":{"index.html":{}}}],["jasmin.createspy",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["kdeepak@kreatio.com",{"_index":529,"title":{},"body":{"license.html":{}}}],["kind",{"_index":566,"title":{},"body":{"license.html":{}}}],["kreatio/inflight",{"_index":454,"title":{},"body":{"index.html":{}}}],["kumar",{"_index":528,"title":{},"body":{"license.html":{}}}],["lesser",{"_index":284,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["liability",{"_index":582,"title":{},"body":{"license.html":{}}}],["liable",{"_index":579,"title":{},"body":{"license.html":{}}}],["library",{"_index":403,"title":{},"body":{"index.html":{}}}],["license",{"_index":524,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":545,"title":{},"body":{"license.html":{}}}],["limited",{"_index":569,"title":{},"body":{"license.html":{}}}],["link",{"_index":49,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["links",{"_index":365,"title":{},"body":{"index.html":{}}}],["list",{"_index":130,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["load",{"_index":391,"title":{},"body":{"index.html":{}}}],["loaded",{"_index":169,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"index.html":{}}}],["loading",{"_index":390,"title":{},"body":{"index.html":{}}}],["local",{"_index":417,"title":{},"body":{"index.html":{}}}],["locally",{"_index":399,"title":{},"body":{"index.html":{}}}],["longer",{"_index":440,"title":{},"body":{"index.html":{}}}],["made",{"_index":415,"title":{},"body":{"index.html":{}}}],["main",{"_index":462,"title":{},"body":{"index.html":{}}}],["making",{"_index":271,"title":{},"body":{"classes/InFlightState.html":{}}}],["manage",{"_index":58,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["map",{"_index":27,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["match",{"_index":435,"title":{},"body":{"index.html":{}}}],["matched",{"_index":396,"title":{},"body":{"index.html":{}}}],["matches",{"_index":441,"title":{},"body":{"index.html":{}}}],["matching",{"_index":53,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mechanisms",{"_index":165,"title":{},"body":{"classes/InFlight.html":{}}}],["mention",{"_index":459,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":571,"title":{},"body":{"license.html":{}}}],["merge",{"_index":548,"title":{},"body":{"license.html":{}}}],["methods",{"_index":69,"title":{},"body":{"classes/InFlight.html":{}}}],["miscellaneous",{"_index":592,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":525,"title":{},"body":{"license.html":{}}}],["mock",{"_index":501,"title":{},"body":{"index.html":{}}}],["modify",{"_index":547,"title":{},"body":{"license.html":{}}}],["modules",{"_index":589,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":273,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["motivation",{"_index":351,"title":{},"body":{"index.html":{}}}],["name",{"_index":45,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/PagedResults.html":{}}}],["need",{"_index":458,"title":{},"body":{"index.html":{}}}],["needs",{"_index":17,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["new",{"_index":79,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":427,"title":{},"body":{"index.html":{}}}],["next",{"_index":116,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["nextpage",{"_index":223,"title":{},"body":{"classes/InFlight.html":{}}}],["ng",{"_index":523,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":575,"title":{},"body":{"license.html":{}}}],["notice",{"_index":559,"title":{},"body":{"license.html":{}}}],["notification",{"_index":164,"title":{},"body":{"classes/InFlight.html":{}}}],["now",{"_index":140,"title":{},"body":{"classes/InFlight.html":{}}}],["npm",{"_index":450,"title":{},"body":{"index.html":{}}}],["null",{"_index":219,"title":{},"body":{"classes/InFlight.html":{},"classes/PagedResults.html":{}}}],["number",{"_index":42,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/PagedResults.html":{}}}],["object",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":19,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["obtaining",{"_index":536,"title":{},"body":{"license.html":{}}}],["occasionally",{"_index":163,"title":{},"body":{"classes/InFlight.html":{}}}],["occurred",{"_index":414,"title":{},"body":{"index.html":{}}}],["once",{"_index":498,"title":{},"body":{"index.html":{}}}],["ondestroy",{"_index":109,"title":{},"body":{"classes/InFlight.html":{}}}],["one",{"_index":81,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["ongoing",{"_index":103,"title":{},"body":{"classes/InFlight.html":{}}}],["optional",{"_index":110,"title":{},"body":{"classes/InFlight.html":{},"classes/PagedResults.html":{},"index.html":{}}}],["order",{"_index":392,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":237,"title":{},"body":{"classes/InFlight.html":{},"license.html":{}}}],["out",{"_index":447,"title":{},"body":{"index.html":{},"license.html":{}}}],["overview",{"_index":590,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":343,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":7,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"coverage.html":{},"index.html":{}}}],["paged",{"_index":510,"title":{},"body":{"index.html":{}}}],["pagedresults",{"_index":21,"title":{"classes/PagedResults.html":{}},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/PagedResults.html":{},"coverage.html":{},"index.html":{}}}],["pagenumber",{"_index":15,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["pages",{"_index":173,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"index.html":{}}}],["pagination",{"_index":422,"title":{},"body":{"index.html":{}}}],["panel",{"_index":294,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["panic",{"_index":228,"title":{},"body":{"classes/InFlight.html":{}}}],["param",{"_index":51,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/PagedResults.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/PagedResults.html":{}}}],["part",{"_index":106,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["particular",{"_index":573,"title":{},"body":{"license.html":{}}}],["passed",{"_index":466,"title":{},"body":{"index.html":{}}}],["pending",{"_index":132,"title":{},"body":{"classes/InFlight.html":{}}}],["per",{"_index":139,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["permission",{"_index":530,"title":{},"body":{"license.html":{}}}],["permit",{"_index":555,"title":{},"body":{"license.html":{}}}],["perpage",{"_index":16,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["person",{"_index":535,"title":{},"body":{"license.html":{}}}],["persons",{"_index":556,"title":{},"body":{"license.html":{}}}],["place",{"_index":426,"title":{},"body":{"index.html":{}}}],["plain",{"_index":456,"title":{},"body":{"index.html":{}}}],["please",{"_index":347,"title":{},"body":{"index.html":{}}}],["portions",{"_index":563,"title":{},"body":{"license.html":{}}}],["pose",{"_index":355,"title":{},"body":{"index.html":{}}}],["position",{"_index":439,"title":{},"body":{"index.html":{}}}],["possible",{"_index":433,"title":{},"body":{"index.html":{}}}],["potential",{"_index":494,"title":{},"body":{"index.html":{}}}],["pragmatic",{"_index":371,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":384,"title":{},"body":{"index.html":{}}}],["previous",{"_index":121,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["private",{"_index":182,"title":{},"body":{"classes/InFlight.html":{}}}],["process",{"_index":108,"title":{},"body":{"classes/InFlight.html":{}}}],["production",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":388,"title":{},"body":{"index.html":{}}}],["project",{"_index":452,"title":{},"body":{"index.html":{}}}],["properties",{"_index":37,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{}}}],["property",{"_index":39,"title":{},"body":{"interfaces/GetPageFunc.html":{}}}],["provide",{"_index":411,"title":{},"body":{"index.html":{}}}],["provided",{"_index":564,"title":{},"body":{"license.html":{}}}],["public",{"_index":65,"title":{},"body":{"classes/InFlight.html":{}}}],["publish",{"_index":549,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":574,"title":{},"body":{"license.html":{}}}],["putting",{"_index":292,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["qualification",{"_index":413,"title":{},"body":{"index.html":{}}}],["query",{"_index":375,"title":{},"body":{"index.html":{}}}],["quite",{"_index":360,"title":{},"body":{"index.html":{}}}],["raise",{"_index":230,"title":{},"body":{"classes/InFlight.html":{}}}],["raised",{"_index":269,"title":{},"body":{"classes/InFlightState.html":{}}}],["read",{"_index":348,"title":{},"body":{"index.html":{}}}],["readme",{"_index":181,"title":{},"body":{"classes/InFlight.html":{}}}],["receive",{"_index":14,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["received",{"_index":146,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{}}}],["regarding",{"_index":378,"title":{},"body":{"index.html":{}}}],["release",{"_index":326,"title":{},"body":{"changelog.html":{}}}],["reloaded",{"_index":444,"title":{},"body":{"index.html":{}}}],["replace",{"_index":118,"title":{},"body":{"classes/InFlight.html":{}}}],["represents",{"_index":257,"title":{},"body":{"classes/InFlightState.html":{}}}],["request",{"_index":115,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["requested",{"_index":383,"title":{},"body":{"index.html":{}}}],["requests",{"_index":104,"title":{},"body":{"classes/InFlight.html":{}}}],["reset",{"_index":239,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{}}}],["response",{"_index":145,"title":{},"body":{"classes/InFlight.html":{}}}],["restriction",{"_index":543,"title":{},"body":{"license.html":{}}}],["result",{"_index":52,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":48,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results(value",{"_index":199,"title":{},"body":{"classes/InFlight.html":{}}}],["results.entities",{"_index":486,"title":{},"body":{"index.html":{}}}],["results.page",{"_index":485,"title":{},"body":{"index.html":{}}}],["results.total",{"_index":483,"title":{},"body":{"index.html":{}}}],["results.ts",{"_index":298,"title":{},"body":{"classes/PagedResults.html":{},"coverage.html":{},"index.html":{}}}],["results.ts:14",{"_index":303,"title":{},"body":{"classes/PagedResults.html":{}}}],["results.ts:19",{"_index":301,"title":{},"body":{"classes/PagedResults.html":{}}}],["results.ts:9",{"_index":304,"title":{},"body":{"classes/PagedResults.html":{}}}],["resultsobservable",{"_index":67,"title":{},"body":{"classes/InFlight.html":{}}}],["resultsobservable]{@link",{"_index":196,"title":{},"body":{"classes/InFlight.html":{}}}],["retained",{"_index":143,"title":{},"body":{"classes/InFlight.html":{}}}],["retry",{"_index":30,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["return",{"_index":18,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["returned",{"_index":497,"title":{},"body":{"index.html":{}}}],["returns",{"_index":43,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["rights",{"_index":546,"title":{},"body":{"license.html":{}}}],["run",{"_index":521,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":33,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["same",{"_index":152,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["scenarios",{"_index":381,"title":{},"body":{"index.html":{}}}],["search",{"_index":368,"title":{},"body":{"index.html":{}}}],["see",{"_index":147,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["selection",{"_index":367,"title":{},"body":{"index.html":{}}}],["sell",{"_index":553,"title":{},"body":{"license.html":{}}}],["service",{"_index":175,"title":{},"body":{"classes/InFlight.html":{}}}],["set",{"_index":90,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["setresults(value",{"_index":154,"title":{},"body":{"classes/InFlight.html":{}}}],["setting",{"_index":470,"title":{},"body":{"index.html":{}}}],["several",{"_index":364,"title":{},"body":{"index.html":{}}}],["shall",{"_index":560,"title":{},"body":{"license.html":{}}}],["show",{"_index":136,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["shows",{"_index":437,"title":{},"body":{"index.html":{}}}],["signature",{"_index":40,"title":{},"body":{"interfaces/GetPageFunc.html":{}}}],["significant",{"_index":519,"title":{},"body":{"index.html":{}}}],["simple",{"_index":406,"title":{},"body":{"index.html":{}}}],["simplify",{"_index":389,"title":{},"body":{"index.html":{}}}],["single",{"_index":352,"title":{},"body":{"index.html":{}}}],["situation",{"_index":362,"title":{},"body":{"index.html":{}}}],["skip",{"_index":516,"title":{},"body":{"index.html":{}}}],["software",{"_index":538,"title":{},"body":{"license.html":{}}}],["solved",{"_index":420,"title":{},"body":{"index.html":{}}}],["sometimes",{"_index":158,"title":{},"body":{"classes/InFlight.html":{}}}],["soon",{"_index":382,"title":{},"body":{"index.html":{}}}],["sort",{"_index":432,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{}}}],["source/criteria",{"_index":288,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["spa",{"_index":354,"title":{},"body":{"index.html":{}}}],["spec.ts",{"_index":508,"title":{},"body":{"index.html":{}}}],["specific",{"_index":419,"title":{},"body":{"index.html":{}}}],["specs",{"_index":280,"title":{},"body":{"classes/InFlightState.html":{},"changelog.html":{},"index.html":{}}}],["src/.../environment.prod.ts",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/inflight/gen",{"_index":500,"title":{},"body":{"index.html":{}}}],["src/app/inflight/get",{"_index":6,"title":{},"body":{"interfaces/GetPageFunc.html":{},"coverage.html":{}}}],["src/app/inflight/inflight",{"_index":255,"title":{},"body":{"classes/InFlightState.html":{},"coverage.html":{},"index.html":{}}}],["src/app/inflight/inflight.ts",{"_index":57,"title":{},"body":{"classes/InFlight.html":{},"coverage.html":{},"index.html":{}}}],["src/app/inflight/inflight.ts:105",{"_index":125,"title":{},"body":{"classes/InFlight.html":{}}}],["src/app/inflight/inflight.ts:130",{"_index":102,"title":{},"body":{"classes/InFlight.html":{}}}],["src/app/inflight/inflight.ts:144",{"_index":113,"title":{},"body":{"classes/InFlight.html":{}}}],["src/app/inflight/inflight.ts:168",{"_index":114,"title":{},"body":{"classes/InFlight.html":{}}}],["src/app/inflight/inflight.ts:18",{"_index":99,"title":{},"body":{"classes/InFlight.html":{}}}],["src/app/inflight/inflight.ts:25",{"_index":85,"title":{},"body":{"classes/InFlight.html":{}}}],["src/app/inflight/inflight.ts:32",{"_index":93,"title":{},"body":{"classes/InFlight.html":{}}}],["src/app/inflight/inflight.ts:38",{"_index":77,"title":{},"body":{"classes/InFlight.html":{}}}],["src/app/inflight/inflight.ts:58",{"_index":150,"title":{},"body":{"classes/InFlight.html":{}}}],["src/app/inflight/inflight.ts:75",{"_index":155,"title":{},"body":{"classes/InFlight.html":{}}}],["src/app/inflight/inflight.ts:85",{"_index":177,"title":{},"body":{"classes/InFlight.html":{}}}],["src/app/interfaces/paged",{"_index":297,"title":{},"body":{"classes/PagedResults.html":{},"coverage.html":{},"index.html":{}}}],["src/environments/environment.prod.ts",{"_index":336,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stage",{"_index":35,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["stale",{"_index":135,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["standard",{"_index":32,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["start",{"_index":73,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["start(perpage",{"_index":123,"title":{},"body":{"classes/InFlight.html":{}}}],["started",{"_index":311,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":60,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["state.ts",{"_index":256,"title":{},"body":{"classes/InFlightState.html":{},"coverage.html":{},"index.html":{}}}],["state.ts:13",{"_index":261,"title":{},"body":{"classes/InFlightState.html":{}}}],["state.ts:20",{"_index":286,"title":{},"body":{"classes/InFlightState.html":{}}}],["state.ts:28",{"_index":268,"title":{},"body":{"classes/InFlightState.html":{}}}],["state.ts:37",{"_index":287,"title":{},"body":{"classes/InFlightState.html":{}}}],["state.ts:47",{"_index":272,"title":{},"body":{"classes/InFlightState.html":{}}}],["statements",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["stateobservable",{"_index":68,"title":{},"body":{"classes/InFlight.html":{}}}],["stateobservable]{@link",{"_index":201,"title":{},"body":{"classes/InFlight.html":{}}}],["still",{"_index":119,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["store",{"_index":448,"title":{},"body":{"index.html":{}}}],["structure",{"_index":507,"title":{},"body":{"index.html":{}}}],["subject",{"_index":84,"title":{},"body":{"classes/InFlight.html":{},"license.html":{}}}],["sublicense",{"_index":551,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":226,"title":{},"body":{"classes/InFlight.html":{}}}],["subscription",{"_index":179,"title":{},"body":{"classes/InFlight.html":{}}}],["subsequent",{"_index":172,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["subsequently",{"_index":438,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":562,"title":{},"body":{"license.html":{}}}],["supported",{"_index":409,"title":{},"body":{"index.html":{}}}],["sw.github.io/inflight",{"_index":350,"title":{},"body":{"index.html":{}}}],["switch",{"_index":127,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["switching",{"_index":374,"title":{},"body":{"index.html":{}}}],["switchinprogress",{"_index":240,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["table",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":518,"title":{},"body":{"index.html":{}}}],["takes",{"_index":275,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["targets",{"_index":404,"title":{},"body":{"index.html":{}}}],["techniques",{"_index":34,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["template",{"_index":11,"title":{},"body":{"interfaces/GetPageFunc.html":{},"index.html":{}}}],["test",{"_index":321,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["testing",{"_index":503,"title":{},"body":{"index.html":{}}}],["this._clearpagesubscription",{"_index":214,"title":{},"body":{"classes/InFlight.html":{}}}],["this._currentpage",{"_index":205,"title":{},"body":{"classes/InFlight.html":{}}}],["this._getpagefn",{"_index":208,"title":{},"body":{"classes/InFlight.html":{}}}],["this._getpagefn(nextpage",{"_index":225,"title":{},"body":{"classes/InFlight.html":{}}}],["this._pageobssubscription",{"_index":217,"title":{},"body":{"classes/InFlight.html":{}}}],["this._pageobssubscription.unsubscribe",{"_index":218,"title":{},"body":{"classes/InFlight.html":{}}}],["this._perpage",{"_index":207,"title":{},"body":{"classes/InFlight.html":{}}}],["this._results",{"_index":192,"title":{},"body":{"classes/InFlight.html":{}}}],["this._results.entities",{"_index":245,"title":{},"body":{"classes/InFlight.html":{}}}],["this._results.entities.concat(data.entities",{"_index":246,"title":{},"body":{"classes/InFlight.html":{}}}],["this._results.entities.length",{"_index":248,"title":{},"body":{"classes/InFlight.html":{}}}],["this._results.page",{"_index":244,"title":{},"body":{"classes/InFlight.html":{}}}],["this._results.total",{"_index":242,"title":{},"body":{"classes/InFlight.html":{}}}],["this._state",{"_index":189,"title":{},"body":{"classes/InFlight.html":{}}}],["this._state.dataloaded",{"_index":215,"title":{},"body":{"classes/InFlight.html":{}}}],["this._state.errored",{"_index":221,"title":{},"body":{"classes/InFlight.html":{}}}],["this._state.hasmorepages",{"_index":209,"title":{},"body":{"classes/InFlight.html":{}}}],["this._state.inflight",{"_index":220,"title":{},"body":{"classes/InFlight.html":{}}}],["this._state.switchinprogress",{"_index":212,"title":{},"body":{"classes/InFlight.html":{}}}],["this._triggerresultschange",{"_index":200,"title":{},"body":{"classes/InFlight.html":{}}}],["this._triggerstatechange",{"_index":213,"title":{},"body":{"classes/InFlight.html":{}}}],["this.cleardata",{"_index":204,"title":{},"body":{"classes/InFlight.html":{}}}],["this.entities",{"_index":309,"title":{},"body":{"classes/PagedResults.html":{}}}],["this.errorobservable",{"_index":195,"title":{},"body":{"classes/InFlight.html":{}}}],["this.errorobservable.next(err",{"_index":250,"title":{},"body":{"classes/InFlight.html":{}}}],["this.errorobservable.next(new",{"_index":233,"title":{},"body":{"classes/InFlight.html":{}}}],["this.getnextpage",{"_index":211,"title":{},"body":{"classes/InFlight.html":{}}}],["this.page",{"_index":308,"title":{},"body":{"classes/PagedResults.html":{}}}],["this.resultsobservable",{"_index":193,"title":{},"body":{"classes/InFlight.html":{}}}],["this.resultsobservable.getvalue",{"_index":198,"title":{},"body":{"classes/InFlight.html":{}}}],["this.resultsobservable.next(this._results",{"_index":252,"title":{},"body":{"classes/InFlight.html":{}}}],["this.stateobservable",{"_index":190,"title":{},"body":{"classes/InFlight.html":{}}}],["this.stateobservable.getvalue",{"_index":203,"title":{},"body":{"classes/InFlight.html":{}}}],["this.stateobservable.next(this._state",{"_index":254,"title":{},"body":{"classes/InFlight.html":{}}}],["this.total",{"_index":307,"title":{},"body":{"classes/PagedResults.html":{}}}],["till",{"_index":144,"title":{},"body":{"classes/InFlight.html":{}}}],["time",{"_index":520,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":29,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{}}}],["tort",{"_index":585,"title":{},"body":{"license.html":{}}}],["total",{"_index":299,"title":{},"body":{"classes/PagedResults.html":{}}}],["totalresults",{"_index":482,"title":{},"body":{"index.html":{}}}],["tricky",{"_index":423,"title":{},"body":{"index.html":{}}}],["true",{"_index":210,"title":{},"body":{"classes/InFlight.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["twice",{"_index":393,"title":{},"body":{"index.html":{}}}],["type",{"_index":83,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"classes/PagedResults.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":457,"title":{},"body":{"index.html":{}}}],["typically",{"_index":22,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["ui",{"_index":59,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["unamed",{"_index":38,"title":{},"body":{"interfaces/GetPageFunc.html":{}}}],["understand",{"_index":167,"title":{},"body":{"classes/InFlight.html":{}}}],["unique",{"_index":356,"title":{},"body":{"index.html":{}}}],["up",{"_index":137,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["update",{"_index":157,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["updated",{"_index":170,"title":{},"body":{"classes/InFlight.html":{}}}],["updates",{"_index":418,"title":{},"body":{"index.html":{}}}],["updating",{"_index":398,"title":{},"body":{"index.html":{}}}],["usage",{"_index":460,"title":{},"body":{"index.html":{}}}],["use",{"_index":31,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":290,"title":{},"body":{"classes/InFlightState.html":{},"index.html":{}}}],["user",{"_index":161,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"index.html":{}}}],["users",{"_index":385,"title":{},"body":{"index.html":{}}}],["using",{"_index":171,"title":{},"body":{"classes/InFlight.html":{}}}],["utility",{"_index":463,"title":{},"body":{"index.html":{}}}],["value",{"_index":151,"title":{},"body":{"classes/InFlight.html":{},"classes/InFlightState.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":337,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":593,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":112,"title":{},"body":{"classes/InFlight.html":{}}}],["warranties",{"_index":570,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":565,"title":{},"body":{"license.html":{}}}],["ways",{"_index":408,"title":{},"body":{"index.html":{}}}],["well",{"_index":91,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["whenever",{"_index":94,"title":{},"body":{"classes/InFlight.html":{},"index.html":{}}}],["whether",{"_index":111,"title":{},"body":{"classes/InFlight.html":{},"license.html":{}}}],["within",{"_index":62,"title":{},"body":{"classes/InFlight.html":{}}}],["without",{"_index":542,"title":{},"body":{"license.html":{}}}],["work",{"_index":443,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":455,"title":{},"body":{"index.html":{}}}],["yield",{"_index":20,"title":{},"body":{"interfaces/GetPageFunc.html":{},"classes/InFlight.html":{},"index.html":{}}}],["yielded",{"_index":153,"title":{},"body":{"classes/InFlight.html":{}}}],["zero",{"_index":264,"title":{},"body":{"classes/InFlightState.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/GetPageFunc.html":{"url":"interfaces/GetPageFunc.html","title":"interface - GetPageFunc","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetPageFunc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inflight/get-page-func.ts\n        \n\n            \n                Description\n            \n            \n                Function template to fetch data\nThe function will receive pageNumber and perPage.\nIt needs to return an Observable that will yield PagedResults.\nThis will typically be Angular HTTP get call, followed by map.\nTo add timeout and retry, use standard RxJS techniques at this stage.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [page: number, perPage: number]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :         Observable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            \n                                                    Parameters :\n                                                    \n                                                        \n                                                                \n                                                                    Name\n                                                                \n                                                        \n                                                        \n                                                                \n                                                                        page\n                                                                \n                                                                \n                                                                        perPage\n                                                                \n                                                        \n                                                    \n                                            \n                                        \n                                    \n\n\n\n                            \n                                \n                                    The function will receive pageNumber and perPage.\nIt needs to return an Observable that will yield PagedResults.\nThis will typically be Angular HTTP get call, followed by map.\nTo add timeout and retry, use standard RxJS techniques at this stage.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\n\nimport {PagedResults} from '../interfaces/paged-results';\n\n/**\n * Function template to fetch data\n *\n * The function will receive `pageNumber` and `perPage`.\n * It needs to return an `Observable` that will yield {@link PagedResults}.\n * This will typically be Angular HTTP `get` call, followed by `map`.\n * To add timeout and retry, use standard RxJS techniques at this stage.\n */\nexport interface GetPageFunc {\n  /**\n   * The function will receive `pageNumber` and `perPage`.\n   * It needs to return an `Observable` that will yield {@link PagedResults}.\n   * This will typically be Angular HTTP `get` call, followed by `map`.\n   * To add timeout and retry, use standard RxJS techniques at this stage.\n   *\n   * @param {number} page\n   * @param {number} perPage\n   * @returns {Observable}\n   */\n  (page: number, perPage: number): Observable;\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InFlight.html":{"url":"classes/InFlight.html","title":"class - InFlight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InFlight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inflight/inflight.ts\n        \n\n            \n                Description\n            \n            \n                Class to manage UI state changes within a component\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorObservable\n                            \n                            \n                                    Public\n                                resultsObservable\n                            \n                            \n                                    Public\n                                stateObservable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                clearData\n                            \n                            \n                                    Public\n                                getNextPage\n                            \n                            \n                                    Public\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    results\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/inflight/inflight.ts:38\n                            \n                        \n\n                \n                    \n                            Create a new instance. You should create one for each component.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/inflight/inflight.ts:25\n                            \n                        \n\n                \n                    \n                        Will yield all errors.\nIn case of errors errored flag will be set in state as well.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/inflight/inflight.ts:32\n                            \n                        \n\n                \n                    \n                        Will yield whenever results change, i.e., new data arrives or data is cleared.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stateObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/inflight/inflight.ts:18\n                            \n                        \n\n                \n                    \n                        Will yield for each state change\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(clearData: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inflight/inflight.ts:130\n                \n            \n\n\n            \n                \n                    Clear ongoing requests if any.\nThis should be called as part of destruction process. For example onDestroy of a component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    clearData\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether to clear results as well.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inflight/inflight.ts:144\n                \n            \n\n\n            \n                \n                    Clear results.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNextPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inflight/inflight.ts:168\n                \n            \n\n\n            \n                \n                    Request next page of data.\nIf it is first page, it will replace results.\nIf results are still in flight when this is called, the previous one will be canceled.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start(perPage: number, clearData: boolean, getPageFn: GetPageFunc)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inflight/inflight.ts:105\n                \n            \n\n\n            \n                \n                    Initiate a switch. Call this to change the criteria that builds the list.\ngetPageFn function will receive pageNumber and perPage.\nIt needs to return an Observable that will yield PagedResults.\nThis will typically be Angular HTTP get call, followed by map.\nTo add timeout and retry, use standard RxJS techniques at this stage.\nIf requests are in flight when a switch is initiated, the pending request will be cancelled.\nIt is ensured that stale data will not show up.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    perPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of entities per page\n\n                                    \n                                \n                                \n                                    clearData\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether to clear the results now,\nif false current set of results will be retained till response is received\n\n                                    \n                                \n                                \n                                    getPageFn\n                                    \n                                                GetPageFunc\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        See description for details\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        results\n                    \n                \n\n                \n                    \n                        getresults()\n                    \n                \n                            \n                                \n                                    Defined in src/app/inflight/inflight.ts:58\n                                \n                            \n                    \n                        \n                                Current value of results, it same as yielded by resultsObservable\n\n\n                                \n                                \n                                \n                                    Returns :         PagedResults\n\n                                \n                        \n                    \n\n                \n                    \n                        setresults(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/inflight/inflight.ts:75\n                                \n                            \n                    \n                        \n                                Directly update results\nWhen set, resultsObservable will yield the new results.\nSometimes the entities displayed in the UI may receive insert/updates/deletes\nbecause of user actions. Occasionally there may be other notification mechanisms\nthat communicate these changes.\nYou must understand that the results may get inconsistent when the loaded entities\nare updated using this call and subsequent pages are loaded from external service.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/inflight/inflight.ts:85\n                                \n                            \n                    \n                        \n                                Current state, it same as yielded by stateObservable\n\n\n                                \n                                \n                                \n                                    Returns :         InFlightState\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {BehaviorSubject, Subject, Subscription} from 'rxjs';\n\nimport {InFlightState} from './inflight-state';\nimport {PagedResults} from '../interfaces/paged-results';\nimport {GetPageFunc} from './get-page-func';\n\n/**\n * Class to manage UI state changes within a component\n *\n * @description see README for details\n */\nexport class InFlight {\n  private _state: InFlightState;\n\n  /**\n   * Will yield for each state change\n   */\n  public stateObservable: BehaviorSubject;\n\n  /**\n   * Will yield all errors.\n   *\n   * In case of errors `errored` flag will be set in `state` as well.\n   */\n  public errorObservable: Subject;\n\n  private _results: PagedResults;\n\n  /**\n   * Will yield whenever results change, i.e., new data arrives or data is cleared.\n   */\n  public resultsObservable: BehaviorSubject;\n\n  private _pageObsSubscription: Subscription;\n  private _getPageFn: GetPageFunc;\n\n  private _perPage: number;\n  private _currentPage: number;\n\n  /**\n   * Create a new instance. You should create one for each component.\n   */\n  constructor() {\n    this._state = new InFlightState();\n    this.stateObservable = new BehaviorSubject(this._state);\n\n    this._results = new PagedResults();\n    this.resultsObservable = new BehaviorSubject(this._results);\n\n    this.errorObservable = new Subject();\n  }\n\n  /**\n   * Current value of results, it same as yielded by [resultsObservable]{@link InFlight#resultsObservable}\n   *\n   * @returns {PagedResults}\n   */\n  get results(): PagedResults {\n    return this.resultsObservable.getValue();\n  }\n\n  /**\n   * Directly update results\n   *\n   * When set, `resultsObservable` will yield the new results.\n   * Sometimes the entities displayed in the UI may receive insert/updates/deletes\n   * because of user actions. Occasionally there may be other notification mechanisms\n   * that communicate these changes.\n   *\n   * You must understand that the results may get inconsistent when the loaded entities\n   * are updated using this call and subsequent pages are loaded from external service.\n   *\n   * @param {PagedResults} value\n   */\n  set results(value: PagedResults) {\n    this._results = value;\n    this._triggerResultsChange();\n  }\n\n  /**\n   * Current state, it same as yielded by [stateObservable]{@link InFlight#stateObservable}\n   *\n   * @returns {InFlightState}\n   */\n  get state(): InFlightState {\n    return this.stateObservable.getValue();\n  }\n\n  /**\n   * Initiate a switch. Call this to change the criteria that builds the list.\n   *\n   * `getPageFn` function will receive `pageNumber` and `perPage`.\n   * It needs to return an `Observable` that will yield {@link PagedResults}.\n   * This will typically be Angular HTTP `get` call, followed by `map`.\n   * To add timeout and retry, use standard RxJS techniques at this stage.\n   *\n   * If requests are in flight when a switch is initiated, the pending request will be cancelled.\n   * It is ensured that stale data will not show up.\n   *\n   * @param {number} perPage Number of entities per page\n   * @param {boolean} clearData Whether to clear the results now,\n   * if `false` current set of results will be retained till response is received\n   * @param {GetPageFunc} getPageFn See description for details\n   */\n  public start(perPage: number, clearData: boolean, getPageFn: GetPageFunc) {\n\n    if (clearData) {\n      this.clearData();\n    }\n\n    this._currentPage = 0;\n    this._perPage = perPage;\n    this._getPageFn = getPageFn;\n\n    this._state.hasMorePages = true;\n\n    this.getNextPage();\n\n    this._state.switchInProgress = true;\n    this._triggerStateChange();\n  }\n\n  /**\n   * Clear ongoing requests if any.\n   *\n   * This should be called as part of destruction process. For example onDestroy of a component.\n   *\n   * @param {boolean} clearData Whether to clear `results` as well.\n   */\n  public clear(clearData: boolean) {\n    if (clearData) {\n      this.clearData();\n    }\n\n    this._clearPageSubscription();\n\n    this._state.hasMorePages = false;\n    this._triggerStateChange();\n  }\n\n  /**\n   * Clear results.\n   */\n  public clearData() {\n    this._results = new PagedResults();\n    this._triggerResultsChange();\n\n    this._state.dataLoaded = false;\n    this._triggerStateChange();\n  }\n\n  private _clearPageSubscription() {\n    if (this._pageObsSubscription) {\n      this._pageObsSubscription.unsubscribe();\n      this._pageObsSubscription = null;\n\n      this._state.inFlight = false;\n      this._triggerStateChange();\n    }\n  }\n\n  /**\n   * Request next page of data.\n   *\n   * If it is first page, it will replace results.\n   * If results are still in flight when this is called, the previous one will be canceled.\n   */\n  public getNextPage() {\n\n    this._clearPageSubscription();\n\n    this._state.errored = false;\n    this._triggerStateChange();\n\n    const nextPage = this._currentPage + 1;\n\n    this._pageObsSubscription = this._getPageFn(nextPage, this._perPage)\n      .subscribe(\n        (data) => {\n          this._clearPageSubscription();\n\n          if (data.page !== nextPage) {\n            // panic, should not happen\n            // raise an error and discard the result\n            this.errorObservable.next(new Error(`Expected page no ${nextPage} instead got page no ${data.page}`));\n            return;\n          }\n\n          this._currentPage = data.page;\n\n          // Replace entire result if it was first page otherwise concatenate received entities\n          // reset flag switchInProgress when first page of data is arrived\n          if (data.page === 1) {\n            this._results = data;\n            this._state.switchInProgress = false;\n            this._triggerStateChange();\n          } else {\n            this._results.total = data.total;\n            this._results.page = data.page;\n            this._results.entities = this._results.entities.concat(data.entities);\n          }\n\n          if (data.entities.length = this._results.total) {\n            this._results.total = this._results.entities.length;\n            this._state.hasMorePages = false;\n            this._triggerStateChange();\n          }\n\n          this._triggerResultsChange();\n\n          this._state.dataLoaded = true;\n          this._triggerStateChange();\n        },\n        (err) => {\n          this._clearPageSubscription();\n          this._state.errored = true;\n          this._triggerStateChange();\n          this.errorObservable.next(err);\n        });\n\n    this._state.inFlight = true;\n    this._triggerStateChange();\n  }\n\n  private _triggerResultsChange() {\n    this.resultsObservable.next(this._results);\n  }\n\n  private _triggerStateChange(): void {\n    this.stateObservable.next(this._state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InFlightState.html":{"url":"classes/InFlightState.html","title":"class - InFlightState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InFlightState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inflight/inflight-state.ts\n        \n\n            \n                Description\n            \n            \n                Represents current state of InFlight\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataLoaded\n                            \n                            \n                                errored\n                            \n                            \n                                hasMorePages\n                            \n                            \n                                inFlight\n                            \n                            \n                                switchInProgress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/inflight/inflight-state.ts:13\n                            \n                        \n\n                \n                    \n                        Will be set when at least one page of results are available.\nIt will be set even if zero entities were received.\nThis flag will help in distinguishing empty data from\nthe state when no data is loaded yet.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errored\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/inflight/inflight-state.ts:28\n                            \n                        \n\n                \n                    \n                        Will be set when an error is raised while fetching results.\nIt will be reset when making a new request.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasMorePages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/inflight/inflight-state.ts:47\n                            \n                        \n\n                \n                    \n                        Will be set if there are more pages expected. It takes care\nof few edge cases, see specs for details. One important one is\na case when the backend actually returns lesser results than\nwhat it initially said it would.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inFlight\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/inflight/inflight-state.ts:20\n                            \n                        \n\n                \n                    \n                        Will be set when request is in in-flight.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            switchInProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/inflight/inflight-state.ts:37\n                            \n                        \n\n                \n                    \n                        Will be set when when data source/criteria is changing.\nThis can be used to indicate the user that current data\nis stale or even putting a glass panel to block interaction.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InFlightState {\n  /**\n   * Will be set when at least one page of results are available.\n   * It will be set even if zero entities were received.\n   * This flag will help in distinguishing empty data from\n   * the state when no data is loaded yet.\n   *\n   * @type {boolean}\n   */\n  dataLoaded = false;\n\n  /**\n   * Will be set when request is in in-flight.\n   *\n   * @type {boolean}\n   */\n  inFlight = false;\n\n  /**\n   * Will be set when an error is raised while fetching results.\n   * It will be reset when making a new request.\n   *\n   * @type {boolean}\n   */\n  errored = false;\n\n  /**\n   * Will be set when when data source/criteria is changing.\n   * This can be used to indicate the user that current data\n   * is stale or even putting a glass panel to block interaction.\n   *\n   * @type {boolean}\n   */\n  switchInProgress = false;\n\n  /**\n   * Will be set if there are more pages expected. It takes care\n   * of few edge cases, see specs for details. One important one is\n   * a case when the backend actually returns lesser results than\n   * what it initially said it would.\n   *\n   * @type {boolean}\n   */\n  hasMorePages = false;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedResults.html":{"url":"classes/PagedResults.html","title":"class - PagedResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/paged-results.ts\n        \n\n            \n                Description\n            \n            \n                Results\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entities\n                            \n                            \n                                page\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(total: number, page: number, entities: any[])\n                    \n                \n                        \n                            \n                                Defined in src/app/interfaces/paged-results.ts:19\n                            \n                        \n\n                \n                    \n                            Create new instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entities\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/interfaces/paged-results.ts:19\n                            \n                        \n\n                \n                    \n                        Array of entities\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/interfaces/paged-results.ts:14\n                            \n                        \n\n                \n                    \n                        Number of pages loaded.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/interfaces/paged-results.ts:9\n                            \n                        \n\n                \n                    \n                        Total number of entities, not all of these may have been loaded.\nCheck entities.length to get number of entities loaded.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PagedResults {\n  /**\n   * Total number of entities, not all of these may have been loaded.\n   * Check `entities.length` to get number of entities loaded.\n   */\n  total: number;\n\n  /**\n   * Number of pages loaded.\n   */\n  page: number;\n\n  /**\n   * Array of entities\n   */\n  entities: any[];\n\n  /**\n   * Create new instance\n   *\n   * @param {number} total\n   * @param {number} page\n   * @param {any[]} entities\n   */\n  constructor(total: number = null, page: number = null, entities: any[] = []) {\n    this.total = total;\n    this.page = page;\n    this.entities = entities;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.1.2 - 2018-05-06\n\nConcept of hasMorePages\nSpecs for inFlight.clear\nUse jasmin.createSpy for cleaner test cases\n\n0.1.1 - 2018-01-28\n\nInitial release\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/inflight/get-page-func.ts\n            \n            interface\n            GetPageFunc\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/inflight/inflight-state.ts\n            \n            class\n            InFlightState\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/inflight/inflight.ts\n            \n            class\n            InFlight\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/paged-results.ts\n            \n            class\n            PagedResults\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.9\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIn Flight\nPlease read this documentation at https://kreatio-sw.github.io/inflight/\nMotivation\nSingle Page Applications (SPA) pose unique issues which conventional applications did not face.\nIn an SPA, quite often the following situation is faced:\n\nThere is a list of entities to be displayed.\nThere are several links that will impact the selection criteria.\nThere may be a search box that will further impact the selection criteria.\n\nA pragmatic approach can be as follows: \n\nWhen switching selection criteria, the previous query, which may still be\nin flight, needs to be canceled.\n\nEven the it could not be canceled it needs to be ensured that stale data\ndoes not show up in the UI (may happen if not implemented correctly).\n\nRegarding entries already displayed, while switching there may be several scenarios:\n\nclear the current entries as soon a switch is requested.\ndo not clear, but prevent users from interacting with these.\ndo not clear, let users interact as well.\nindicate users that a switch is in progress.\n\n\nNeeds to simplify loading subsequent pages:\n\nshould indicate when a page is getting loaded.\nshould manage a switch even when a page is getting loaded.\nmust load pages in order.\nshould not load the same page twice.\n\n\nIdeally distinguish when no data has arrived from no entities matched the criteria.\n\nAllows updating entities locally:\n\nupdating some attributes.\nadding new entities.\ndeleting entities.\n\n\n\nWell, this library targets to simplify the above in simple and consistent ways.\nSupported State Flags\nSee InFlightState for more details:\n\ndataLoaded - will be set \nwhen data is loaded, this flag will help in\ndistinguishing empty data from the state when no data is\nloaded yet.\ninFlight - when data \nhas been requested but not yet arrived.\nswitchInProgress - will\nprovide additional\nqualification when data source/criteria is changing.\nThis can be used to indicate the user that current data\nis stale or even putting a glass panel to block\ninteraction.\nerrored - set to true when an error has occurred,\nwill be cleared when a subsequent request is made.\nhasMorePages set to true if there are more\npages expected. It takes care of few edge cases, see specs for details.\nOne important one is a case when the backend actually returns lesser\nresults than what it initially said it would.\n\nConsiderations for local updates\nThese issues are not specific to this library and not solved by\nthis library.\nLocal updates when combined with pagination can get quite tricky.\nConsider the cases when not all entities are loaded in the UI yet.\n\nInserts:\n\nWhere to place the newly created entries\n\nbeginning\nend\nin the correct sort order (may not be possible as all\nmatching entities are not loaded yet)\n\n\nwhat to do if newly created entity does not match the current\nselection criteria\n\nwhat to do if the newly added entities shows up on a subsequently added page\n\n\n\nUpdate:\n\nwhat if the update changes the position of the entity as per the sort order\nwhat if the entity no longer matches the selection criteria\n\n\nDelete:\n\nwill the pagination still work (i.e. subsequent pages will load correctly)\nwhat if the entities get reloaded even before the delete got carried out in\nthe data store.\n\n\n\nInstall\nAdd npm package to your Angular4/Angular5 project:\n```bash\n$ npm -i @kreatio/inflight\nor\n$ yarn add @kreatio/inflight\n```\nAll classes are plain typescript classes, so you need not mention or provide any of these\nin your project.\nUsage\nSee the following for API details:\n\nInFlight - main utility class\nInFlightState\nPagedResults\nGetPageFunc - function template to fetch actual data\n\nBasic usage\n```typescript\n    const inFlight = new InFlight();\n// This will be passed to the function that gets actual data\nconst perPage = 25;\n\n// If set to true it will clear the data before issuing next\n// request. Setting flase will cause the data to chnage when\n// first page of new request arrives.\nconst clearData = true;\n\ninFlight.start(perPage, clearData, (page, perPage) => {\n  return getAllImages(page, perPage);\n});\n\ninFlight.stateObservable.subscribe((state: InFlightState) => {\n  // Will yield for every state change\n});\n\n// You can use state directly as a variable for binding\nlet dataInFlight = inFlight.state.inFlight;\nlet dataLoaded = inFlight.state.dataLoaded;\n\ninFlight.resultsObservable.subscribe((results:PagedResults) => {\n  // Will yield whenever results change\n  let totalResults = results.total;\n  let currentPage = results.page;\n  let entities = results.entities;\n});\n\n// Load additional page if there are more pages\nif(inFlight.state.hasMorePages) {\n  inFlight.getNextPage();\n}\n\n// To switch the list entirely call start again with new criteria\ninFlight.start(5, true, (page, perPage) => {\n  return getMyImages(page, perPage);\n});```\nImplementing the data request function\nIt should return an Observable that should yield a PagedResults.\nTypically it will be a get call on one of the Angular HTTP  classes\nwith potential chaining of map calls. The returned Observable should\nyield only once.              \nDeveloping\n\nsrc/app/inflight/gen-mock-data.spec.ts - part of testing framework, generates\ntest data with an optional delay\nsrc/app/inflight/inflight-state.ts - structure for state\nsrc/app/inflight/inflight-*.spec.ts - test cases\nsrc/app/inflight/inflight.ts - main code\nsrc/app/interfaces/paged-results.ts - structure for paged results\n\nTest cases have good coverage - has actually been more complex to develop than the\nactual functionality. Mock Data Generator has test cases of its own which\nare set to skip by default.\nBeware test cases take significant time to run as these need to test delays\nand errors.\n$ ng test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright 2018 Deepak Kumar kdeepak@kreatio.com\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to\ndo so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY\nKIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\nPURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\nOR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
