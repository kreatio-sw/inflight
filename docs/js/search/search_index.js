var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["25","actual","add","addit","again","angular","arriv","basic","becom","befor","bewar","bind","block","call","case","caus","chain","chang","chnage","class","clear","cleardata","code","complex","const","coverag","criteria","current","currentpag","data","data.spec.t","datainflight","dataload","default","delay","develop","differ","directli","distinguish","document","empti","entir","entiti","error","even","facilit","first","flag","flase","flight","follow","framework","function","gener","get","getallimages(pag","getmyimages(pag","glass","good","help","http","https://kreatio","implement","index","indic","infinit","inflight","inflight.getnextpag","inflight.resultsobservable.subscribe((results:pagedresult","inflight.start(5","inflight.start(perpag","inflight.state.dataload","inflight.state.inflight","inflight.stateobservable.subscribe((st","inflightst","inform","instal","interact","issu","late","librari","link","list","load","made","main","manag","map","match","mock","more","need","new","next","ng","npm","observ","occur","older","on","onc","option","packag","page","pagedresult","panel","part","pass","perpag","pleas","potenti","prior","project","proper","provid","put","qualif","read","request","result","results.ent","results.pag","results.t","results.tot","return","run","scroll","set","show","signific","skip","source/criteria","spec.t","src/app/inflight/gen","src/app/inflight/inflight","src/app/inflight/inflight.t","src/app/interfaces/pag","stale","start","state","state.t","structur","subsequ","support","sw.github.io/inflight","switch","switchinprogress","take","test","time","totalresult","tricki","true","typic","ui","us","usag","user","variabl","view","whenev","work","yield"],"overview.html":["1","3","class","interfac","match","overview","result"],"modules.html":["match","modul","result"],"classes/InFlight.html":["0","1","_clearpagesubscript","_currentpag","_getpagefn","_pageobssubscript","_perpag","_result","_state","_triggerresultschang","_triggerstatechang","accessor","action","add","angular","arriv","behaviorsubject","behaviorsubject(this._result","behaviorsubject(this._st","boolean","build","call","cancel","case","chang","class","clear","clear(cleardata","cleardata","commun","compon","concaten","const","constructor","creat","criteria","current","data","data.pag","data.tot","defin","descript","destructon","detail","directli","discard","display","each","ensur","entir","entiti","err","error","error(`expect","errorobserv","exampl","export","extern","fals","file","first","flag","flight","follow","func","function","getnextpag","getpagefn","getpagefunc","getresult","getstat","happen","http","i.","import","inconsist","index","inflight","inflight#resultsobserv","inflight#stateobserv","inflightst","info","initi","insert/updates/delet","instanc","instead","interfaces/pag","link","list","load","manag","map","match","mechan","method","name","need","new","next","nextpag","notif","now","null","number","observ","occasion","on","ondestroy","ongo","option","otherwis","page","pagedresult","pagenumb","panic","param","paramet","part","pend","per","perpag","previou","privat","process","properti","public","rais","readm","receiv","replac","request","reset","respons","result","results(valu","resultsobserv","resultsobservable]{@link","retain","retri","return","rxj","rxjs/behaviorsubject","rxjs/subject","rxjs/subscript","same","see","servic","set","setresults(valu","show","sometim","sourc","src/app/inflight/inflight.t","src/app/inflight/inflight.ts:107","src/app/inflight/inflight.ts:130","src/app/inflight/inflight.ts:141","src/app/inflight/inflight.ts:165","src/app/inflight/inflight.ts:20","src/app/inflight/inflight.ts:27","src/app/inflight/inflight.ts:34","src/app/inflight/inflight.ts:40","src/app/inflight/inflight.ts:60","src/app/inflight/inflight.ts:77","src/app/inflight/inflight.ts:87","stage","stale","standard","start","start(perpag","state","stateobserv","stateobservable]{@link","still","subject","subscrib","subscript","subsequ","switch","switchinprogress","techniqu","this._clearpagesubscript","this._currentpag","this._getpagefn","this._getpagefn(nextpag","this._pageobssubscript","this._pageobssubscription.unsubscrib","this._perpag","this._result","this._results.ent","this._results.entities.concat(data.ent","this._results.pag","this._results.tot","this._stat","this._state.dataload","this._state.error","this._state.inflight","this._state.switchinprogress","this._triggerresultschang","this._triggerstatechang","this.cleardata","this.errorobserv","this.errorobservable.next(err","this.errorobservable.next(new","this.getnextpag","this.resultsobserv","this.resultsobservable.getvalu","this.resultsobservable.next(this._result","this.stateobserv","this.stateobservable.getvalu","this.stateobservable.next(this._st","till","timeout","true","type","typic","ui","understand","up","updat","us","user","valu","void","well","whenev","whether","within","yield"],"classes/InFlightState.html":["avail","block","boolean","chang","class","current","data","dataload","default","defin","descript","distinguish","empti","entiti","error","even","export","fals","fetch","file","flag","flight","glass","help","index","indic","inflight","inflightst","info","interact","load","make","match","new","on","page","panel","properti","put","rais","receiv","repres","request","reset","result","set","sourc","source/criteria","src/app/inflight/inflight","stale","state","state.t","state.ts:13","state.ts:20","state.ts:28","state.ts:37","switchinprogress","type","us","user","valu","zero"],"classes/PagedResults.html":["array","check","class","constructor","constructor(tot","creat","defin","descript","entiti","entities.length","export","file","index","info","instanc","load","match","name","new","null","number","option","page","pagedresult","param","paramet","properti","result","results.t","results.ts:14","results.ts:19","results.ts:9","sourc","src/app/interfaces/pag","this.ent","this.pag","this.tot","total","type"],"interfaces/GetPageFunc.html":["add","angular","call","data","defin","descript","export","fetch","file","follow","func.t","func.ts:12","function","getpagefunc","http","import","index","info","interfac","interfaces/pag","link","map","match","name","need","number","observ","page","pagedresult","pagenumb","param","paramet","perpag","properti","receiv","result","retri","return","rxj","rxjs/observ","signatur","sourc","src/app/inflight/get","stage","standard","techniqu","templat","timeout","type","typic","unam","us","yield"],"coverage.html":["100","2/2","5/5","9/9","class","coverag","document","file","func.t","getpagefunc","identifi","inflight","inflightst","interfac","match","new","page","pagedresult","result","results.t","src/app/inflight/get","src/app/inflight/inflight","src/app/inflight/inflight.t","src/app/interfaces/pag","state.t","statement","tabl","tablesort(document.getelementbyid('coverag","type"]},"length":8},"tokenStore":{"root":{"0":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"1":{"0":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.10810810810810811}}},"docs":{}},"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}},"2":{"5":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}},"docs":{},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}},"docs":{}}},"3":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111}}},"5":{"docs":{},"/":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.05405405405405406}}},"docs":{}}},"9":{"docs":{},"/":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}},"docs":{}}},"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}},"d":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}}}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907}}}},"a":{"docs":{},"y":{"docs":{"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.00980392156862745}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}},"s":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.011204481792717087},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.024096385542168676}}}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.014005602240896359},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.01444043321299639},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}}}}}},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.014005602240896359},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":5.0056022408963585},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":5.0120481927710845},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":5.016260162601626},"coverage.html":{"ref":"coverage.html","tf":0.08108108108108109}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.01680672268907563}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.01680672268907563}}}}}},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"o":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0070028011204481795}}}}},"m":{"docs":{},"u":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"coverage.html":{"ref":"coverage.html","tf":10.027027027027026}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.008403361344537815},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.018072289156626505}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.05054151624548736},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.015406162464985995},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.04819277108433735},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0125}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0070028011204481795}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.024096385542168676}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.024096385542168676}}}}}},"i":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.015406162464985995},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.024096385542168676},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.032520325203252036},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.00980392156862745},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0125}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.00980392156862745},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.12195121951219512}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}},"r":{"docs":{},"r":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.00980392156862745},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.03614457831325301}},"(":{"docs":{},"`":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.024096385542168676}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}},"l":{"docs":{},"s":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.008403361344537815},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.04819277108433735}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}}}},"l":{"docs":{},"e":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0375}}}}}},".":{"docs":{},"t":{"docs":{"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}},"s":{"docs":{},":":{"1":{"2":{"docs":{"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}}},"docs":{}},"docs":{}}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0125}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.3405535499398313}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}}}}}}},"m":{"docs":{},"y":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.00980392156862745}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.008403361344537815},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":5.0125},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}}},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"k":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.008403361344537815},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0125}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}}}},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":5.004201680672269},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.030120481927710843},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"5":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}},"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.008403361344537815},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":5.0120481927710845},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}}},"#":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}},"o":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}},"n":{"docs":{},"c":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":5.0125},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},".":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}},"n":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0125}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.01444043321299639},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.04878048780487805}}}}}},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195}}}},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"overview.html":{"ref":"overview.html","tf":0.2222222222222222},"modules.html":{"ref":"modules.html","tf":0.4},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0125},"coverage.html":{"ref":"coverage.html","tf":0.05405405405405406}}}}},"k":{"docs":{},"e":{"docs":{"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":10.2}}}}}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.015406162464985995},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}},"x":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907}}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}},"w":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.011204481792717087},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.16260162601626016},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0375}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.05}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}},"g":{"docs":{},"o":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.11111111111111}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.021660649819494584},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.018207282913165267},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.08943089430894309},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0375},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.015406162464985995},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":5.016260162601626},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.03125},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}}}}}},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}},"i":{"docs":{},"c":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}},"a":{"docs":{},"m":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0070028011204481795},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.024390243902439025},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0125}},"e":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}}}}}}},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"e":{"docs":{},"r":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.018050541516245487},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0070028011204481795},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.05}}}}}},"n":{"docs":{},"d":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.012605042016806723}}}}}},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}},"t":{"docs":{},"i":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.01875}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.029411764705882353}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}},"m":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02527075812274368},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.011204481792717087},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.024096385542168676}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01444043321299639},"overview.html":{"ref":"overview.html","tf":0.2222222222222222},"modules.html":{"ref":"modules.html","tf":0.4},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.04201680672268908},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.03614457831325301},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.024390243902439025},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.01875},"coverage.html":{"ref":"coverage.html","tf":0.05405405405405406}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}},"s":{"docs":{},":":{"1":{"4":{"docs":{"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009}}},"9":{"docs":{"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.016260162601626018}}},"docs":{}},"9":{"docs":{"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009}}},"docs":{}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.00980392156862745}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"]":{"docs":{},"{":{"docs":{},"@":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01444043321299639},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0196078431372549},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0375}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}},"r":{"docs":{},"i":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.00980392156862745},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}},"a":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}},"x":{"docs":{},"j":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}},"s":{"docs":{},"/":{"docs":{},"b":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.018050541516245487},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.00980392156862745},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.060240963855421686}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}},"e":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}},"t":{"docs":{"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0125},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.030120481927710843},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}},"s":{"docs":{},":":{"1":{"0":{"7":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"docs":{}},"3":{"0":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"docs":{}},"4":{"1":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"docs":{}},"6":{"5":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"docs":{}},"docs":{}},"2":{"0":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"7":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"docs":{}},"3":{"4":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"docs":{}},"4":{"0":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"docs":{}},"6":{"0":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"docs":{}},"7":{"7":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"docs":{}},"8":{"7":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.04065040650406504},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.336943441636582},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.021660649819494584},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.01680672268907563},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.018072289156626505}},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}},"s":{"docs":{},":":{"1":{"3":{"docs":{"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169}}},"docs":{}},"2":{"0":{"docs":{"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169}}},"8":{"docs":{"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169}}},"docs":{}},"3":{"7":{"docs":{"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.006024096385542169}}},"docs":{}},"docs":{}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0070028011204481795}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"]":{"docs":{},"{":{"docs":{},"@":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}}}}}}},"g":{"docs":{},"e":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}},"p":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0070028011204481795}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195}}}}}}}},"w":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.01444043321299639},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.024096385542168676}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}},"b":{"docs":{},"l":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02888086642599278}}}},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.0125}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}}}}},"l":{"docs":{},"l":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.07317073170731707}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}},"u":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.01444043321299639},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}}}},"y":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}},"e":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.008403361344537815},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.024096385542168676},"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.032520325203252036},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.02702702702702703}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.004201680672268907}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.011204481792717087}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/PagedResults.html":{"ref":"classes/PagedResults.html","tf":0.008130081300813009}}}}}}}}}},"u":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.010830324909747292},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195}}}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.007220216606498195},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}}}},"a":{"docs":{},"m":{"docs":{"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.00625}}}}},"p":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}}}},"l":{"docs":{},"u":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0070028011204481795},"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.024096385542168676}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.008403361344537815}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0036101083032490976}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0056022408963585435}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0028011204481792717}}}}}}}},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.01444043321299639},"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0196078431372549},"interfaces/GetPageFunc.html":{"ref":"interfaces/GetPageFunc.html","tf":0.025}}}}}}},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"n":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/InFlight.html":{"ref":"classes/InFlight.html","tf":0.0014005602240896359}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"classes/InFlightState.html":{"ref":"classes/InFlightState.html","tf":0.012048192771084338}}}}}}},"length":584},"corpusTokens":["0","1","100","2/2","25","3","5/5","9/9","_clearpagesubscript","_currentpag","_getpagefn","_pageobssubscript","_perpag","_result","_state","_triggerresultschang","_triggerstatechang","accessor","action","actual","add","addit","again","angular","array","arriv","avail","basic","becom","befor","behaviorsubject","behaviorsubject(this._result","behaviorsubject(this._st","bewar","bind","block","boolean","build","call","cancel","case","caus","chain","chang","check","chnage","class","clear","clear(cleardata","cleardata","code","commun","complex","compon","concaten","const","constructor","constructor(tot","coverag","creat","criteria","current","currentpag","data","data.pag","data.spec.t","data.tot","datainflight","dataload","default","defin","delay","descript","destructon","detail","develop","differ","directli","discard","display","distinguish","document","each","empti","ensur","entir","entiti","entities.length","err","error","error(`expect","errorobserv","even","exampl","export","extern","facilit","fals","fetch","file","first","flag","flase","flight","follow","framework","func","func.t","func.ts:12","function","gener","get","getallimages(pag","getmyimages(pag","getnextpag","getpagefn","getpagefunc","getresult","getstat","glass","good","happen","help","http","https://kreatio","i.","identifi","implement","import","inconsist","index","indic","infinit","inflight","inflight#resultsobserv","inflight#stateobserv","inflight.getnextpag","inflight.resultsobservable.subscribe((results:pagedresult","inflight.start(5","inflight.start(perpag","inflight.state.dataload","inflight.state.inflight","inflight.stateobservable.subscribe((st","inflightst","info","inform","initi","insert/updates/delet","instal","instanc","instead","interact","interfac","interfaces/pag","issu","late","librari","link","list","load","made","main","make","manag","map","match","mechan","method","mock","modul","more","name","need","new","next","nextpag","ng","notif","now","npm","null","number","observ","occasion","occur","older","on","onc","ondestroy","ongo","option","otherwis","overview","packag","page","pagedresult","pagenumb","panel","panic","param","paramet","part","pass","pend","per","perpag","pleas","potenti","previou","prior","privat","process","project","proper","properti","provid","public","put","qualif","rais","read","readm","receiv","replac","repres","request","reset","respons","result","results(valu","results.ent","results.pag","results.t","results.tot","results.ts:14","results.ts:19","results.ts:9","resultsobserv","resultsobservable]{@link","retain","retri","return","run","rxj","rxjs/behaviorsubject","rxjs/observ","rxjs/subject","rxjs/subscript","same","scroll","see","servic","set","setresults(valu","show","signatur","signific","skip","sometim","sourc","source/criteria","spec.t","src/app/inflight/gen","src/app/inflight/get","src/app/inflight/inflight","src/app/inflight/inflight.t","src/app/inflight/inflight.ts:107","src/app/inflight/inflight.ts:130","src/app/inflight/inflight.ts:141","src/app/inflight/inflight.ts:165","src/app/inflight/inflight.ts:20","src/app/inflight/inflight.ts:27","src/app/inflight/inflight.ts:34","src/app/inflight/inflight.ts:40","src/app/inflight/inflight.ts:60","src/app/inflight/inflight.ts:77","src/app/inflight/inflight.ts:87","src/app/interfaces/pag","stage","stale","standard","start","start(perpag","state","state.t","state.ts:13","state.ts:20","state.ts:28","state.ts:37","statement","stateobserv","stateobservable]{@link","still","structur","subject","subscrib","subscript","subsequ","support","sw.github.io/inflight","switch","switchinprogress","tabl","tablesort(document.getelementbyid('coverag","take","techniqu","templat","test","this._clearpagesubscript","this._currentpag","this._getpagefn","this._getpagefn(nextpag","this._pageobssubscript","this._pageobssubscription.unsubscrib","this._perpag","this._result","this._results.ent","this._results.entities.concat(data.ent","this._results.pag","this._results.tot","this._stat","this._state.dataload","this._state.error","this._state.inflight","this._state.switchinprogress","this._triggerresultschang","this._triggerstatechang","this.cleardata","this.ent","this.errorobserv","this.errorobservable.next(err","this.errorobservable.next(new","this.getnextpag","this.pag","this.resultsobserv","this.resultsobservable.getvalu","this.resultsobservable.next(this._result","this.stateobserv","this.stateobservable.getvalu","this.stateobservable.next(this._st","this.tot","till","time","timeout","total","totalresult","tricki","true","type","typic","ui","unam","understand","up","updat","us","usag","user","valu","variabl","view","void","well","whenev","whether","within","work","yield","zero"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIn Flight\nPlease read this documentation at https://kreatio-sw.github.io/inflight/\nWhile switching a list view with data with different criteria\nit becomes tricky to manage UI switch. This library facilitates the following:\n\nBlocks any requests that were made prior to the switch so\nthat it does not show data from older request if that arrives late.\nWorks even when one of the pages were getting loaded as part of\ninfinite scroll.\nProvides clear state {@link InFlightState} information on state which can be used\nto provide proper indication to the user. Following flags are supported:\ndataLoaded - will be set when data is loaded, this flag will help in\ndistinguishing empty data from the state when no data is\nloaded yet.\ninFlight - when data has been requested but not yet arrived.\nswitchInProgress - will provide additional\nqualification when data source/criteria is changing.\nThis can be used to indicate the user that current data\nis stale or even putting a glass panel to block\ninteraction.\nerrored - set to true when an error has occurred,\nwill be cleared when a subsequent request is made.\n\n\n\nInstall\nAdd npm package to your project.\nUsage\nBasic usage\n    const inFlight = new InFlight();\n\n    // This will be passed to the function that gets actual data\n    const perPage = 25;\n\n    // If set to true it will clear the data before issuing next\n    // request. Setting flase will cause the data to chnage when\n    // first page of new request arrives.\n    const clearData = true;\n\n    inFlight.start(perPage, clearData, (page, perPage) => {\n      return getAllImages(page, perPage);\n    });\n\n    inFlight.stateObservable.subscribe((state: InFlightState) => {\n      // Will yield for every state change\n    });\n\n    // You can use state directly as a variable for binding\n    let dataInFlight = inFlight.state.inFlight;\n    let dataLoaded = inFlight.state.dataLoaded;\n\n    inFlight.resultsObservable.subscribe((results:PagedResults) => {\n      // Will yield whenever results change\n      let totalResults = results.total;\n      let currentPage = results.page;\n      let entities = results.entities;\n    });\n\n    // Load additional page\n    inFlight.getNextPage();\n\n    // To switch the list entirely call start again with new criteria\n    inFlight.start(5, true, (page, perPage) => {\n      return getMyImages(page, perPage);\n    });Implementing the data request function\nIt should return an Observable that should yield a PagedResults.\nTypically it will be a get call on one of the Angular HTTP  classes\nwith potential chaining of map calls. The returned Observable should\nsupport yield only once.              \nDeveloping\n\nsrc/app/inflight/gen-mock-data.spec.ts - part of testing framework, generates\ntest data with an optional delay\nsrc/app/inflight/inflight-state.ts - structure for state\nsrc/app/inflight/inflight-*.spec.ts - test cases\nsrc/app/inflight/inflight.ts - main code\nsrc/app/interfaces/paged-results.ts - structure for paged results\n\nTest cases have good coverage - has actually been more complex to develop than the\nactual functionality. Mock Data Generator has test cases of its own which\nare set to skip by default.\nBeware test cases take significant time to run as these need to test delays\nand errors.\n$ ng test\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n\n    \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InFlight.html":{"url":"classes/InFlight.html","title":"class - InFlight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InFlight\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inflight/inflight.ts\n        \n\n            \n                Description\n            \n            \n                Class to manage UI state changes within a component\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        errorObservable\n                                    \n                                    \n                                            Public\n                                        resultsObservable\n                                    \n                                    \n                                            Public\n                                        stateObservable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        clear\n                                    \n                                    \n                                            Public\n                                        clearData\n                                    \n                                    \n                                            Public\n                                        getNextPage\n                                    \n                                    \n                                            Public\n                                        start\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        results\n                                    \n                                    \n                                        state\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight.ts:40\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        clear\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    clear(clearData: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight.ts:130\n                                        \n                                    \n            \n                            \n                                \n                                        Clear ongoing requests if any.\n            This should be called as part of destructon process. For example onDestroy of a component.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              clearData\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              Whether to clear results as well.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        clearData\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    clearData()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight.ts:141\n                                        \n                                    \n            \n                            \n                                \n                                        Clear results.\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        getNextPage\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getNextPage()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight.ts:165\n                                        \n                                    \n            \n                            \n                                \n                                        Request next page of data.\n            If it is first page, it will replace results.\n            If results are still in flight when this is called, the previous one will be canceled.\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        start\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    start(perPage: number, clearData: boolean, getPageFn: GetPageFunc)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight.ts:107\n                                        \n                                    \n            \n                            \n                                \n                                        Initiate a switch. Call this to change the criteria that builds the list.\n            getPageFn function will receive pageNumber and perPage.\n            It needs to return an Observable that will yield PagedResults.\n            This will typically be Angular HTTP get call, followed by map.\n            To add timeout and retry, use standard RxJS techniques at this stage.\n            If requests are in flight when a switch is initiated, the pending request will be cancelled.\n            It is ensured that stale data will not show up.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              perPage\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              Number of entities per page\n            \n                                                            \n                                                            \n                                                              clearData\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              Whether to clear the results now,\n            if false current set of results will be retained till response is received\n            \n                                                            \n                                                            \n                                                              getPageFn\n                                                              \n                                                                      GetPageFunc\n                                                              \n                                                              \n                                                              \n                                                              See description for details\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        errorObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    errorObservable:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight.ts:27\n                                        \n                                    \n            \n                            \n                                \n                                    Will yield all errors.\n            In case of errors errored flag will be set in state as well.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        resultsObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    resultsObservable:     BehaviorSubject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     BehaviorSubject\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight.ts:34\n                                        \n                                    \n            \n                            \n                                \n                                    Will yield whenever results change, i.e., new data arrives or data is cleared.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        stateObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    stateObservable:     BehaviorSubject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     BehaviorSubject\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight.ts:20\n                                        \n                                    \n            \n                            \n                                \n                                    Will yield for each state change\n            \n                                \n                            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    results\n                                \n                            \n            \n                            \n                                \n                                    getresults()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/app/inflight/inflight.ts:60\n                                            \n                                        \n                                \n                                    \n                                            Current value of results, it same as yielded by resultsObservable\n            \n            \n                                            \n                                            \n                                            \n                                                Returns :     PagedResults\n            \n                                            \n                                    \n                                \n            \n                            \n                                \n                                    setresults(value: )\n                                \n                            \n                                        \n                                            \n                                                Defined in src/app/inflight/inflight.ts:77\n                                            \n                                        \n                                \n                                    \n                                            Directly update results\n            When set, resultsObservable will yield the new results.\n            Sometimes the entities displayed in the UI may receive insert/updates/deletes\n            because of user actions. Occasionally there may be other notification mechanisms\n            that communicate these changes.\n            You must understand that the results may get inconsistent when the loaded entities\n            are updated using this call and subsequent pages are loaded from external service.\n            \n            \n                                            \n                                                    Parameters :\n                                                    \n                                                        \n                                                            \n                                                                Name\n                                                                Type\n                                                                Optional\n                                                                Description\n                                                            \n                                                        \n                                                        \n                                                                \n                                                                  value\n                                                                  \n                                                                  \n                                                                  \n                                                                  \n                                                                  \n                                                                \n                                                        \n                                                    \n                                            \n                                            \n                                            \n                                            \n                                                Returns :     void\n            \n                                            \n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    state\n                                \n                            \n            \n                            \n                                \n                                    getstate()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/app/inflight/inflight.ts:87\n                                            \n                                        \n                                \n                                    \n                                            Current state, it same as yielded by stateObservable\n            \n            \n                                            \n                                            \n                                            \n                                                Returns :     InFlightState\n            \n                                            \n                                    \n                                \n            \n                        \n                    \n            \n    \n\n\n    \n        import {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {InFlightState} from './inflight-state';\nimport {PagedResults} from '../interfaces/paged-results';\nimport {GetPageFunc} from './get-page-func';\n\n/**\n * Class to manage UI state changes within a component\n *\n * @description see README for details\n */\nexport class InFlight {\n  private _state: InFlightState;\n\n  /**\n   * Will yield for each state change\n   */\n  public stateObservable: BehaviorSubject;\n\n  /**\n   * Will yield all errors.\n   *\n   * In case of errors `errored` flag will be set in `state` as well.\n   */\n  public errorObservable: Subject;\n\n  private _results: PagedResults;\n\n  /**\n   * Will yield whenever results change, i.e., new data arrives or data is cleared.\n   */\n  public resultsObservable: BehaviorSubject;\n\n  private _pageObsSubscription: Subscription;\n  private _getPageFn: GetPageFunc;\n\n  private _perPage: number;\n  private _currentPage: number;\n\n  /**\n   * Create a new instance. You should create one for each component.\n   */\n  constructor() {\n    this._state = new InFlightState();\n    this.stateObservable = new BehaviorSubject(this._state);\n\n    this._results = new PagedResults();\n    this.resultsObservable = new BehaviorSubject(this._results);\n\n    this.errorObservable = new Subject();\n  }\n\n  /**\n   * Current value of results, it same as yielded by [resultsObservable]{@link InFlight#resultsObservable}\n   *\n   * @returns {PagedResults}\n   */\n  get results(): PagedResults {\n    return this.resultsObservable.getValue();\n  }\n\n  /**\n   * Directly update results\n   *\n   * When set, `resultsObservable` will yield the new results.\n   * Sometimes the entities displayed in the UI may receive insert/updates/deletes\n   * because of user actions. Occasionally there may be other notification mechanisms\n   * that communicate these changes.\n   *\n   * You must understand that the results may get inconsistent when the loaded entities\n   * are updated using this call and subsequent pages are loaded from external service.\n   *\n   * @param {PagedResults} value\n   */\n  set results(value: PagedResults) {\n    this._results = value;\n    this._triggerResultsChange();\n  }\n\n  /**\n   * Current state, it same as yielded by [stateObservable]{@link InFlight#stateObservable}\n   *\n   * @returns {InFlightState}\n   */\n  get state(): InFlightState {\n    return this.stateObservable.getValue();\n  }\n\n  /**\n   * Initiate a switch. Call this to change the criteria that builds the list.\n   *\n   * `getPageFn` function will receive `pageNumber` and `perPage`.\n   * It needs to return an `Observable` that will yield {@link PagedResults}.\n   * This will typically be Angular HTTP `get` call, followed by `map`.\n   * To add timeout and retry, use standard RxJS techniques at this stage.\n   *\n   * If requests are in flight when a switch is initiated, the pending request will be cancelled.\n   * It is ensured that stale data will not show up.\n   *\n   * @param {number} perPage Number of entities per page\n   * @param {boolean} clearData Whether to clear the results now,\n   * if `false` current set of results will be retained till response is received\n   * @param {GetPageFunc} getPageFn See description for details\n   */\n  public start(perPage: number, clearData: boolean, getPageFn: GetPageFunc) {\n\n    if (clearData) {\n      this.clearData();\n    }\n\n    this._currentPage = 0;\n    this._perPage = perPage;\n    this._getPageFn = getPageFn;\n\n    this.getNextPage();\n\n    this._state.switchInProgress = true;\n    this._triggerStateChange();\n  }\n\n  /**\n   * Clear ongoing requests if any.\n   *\n   * This should be called as part of destructon process. For example onDestroy of a component.\n   *\n   * @param {boolean} clearData Whether to clear `results` as well.\n   */\n  public clear(clearData: boolean) {\n    if (clearData) {\n      this.clearData();\n    }\n\n    this._clearPageSubscription();\n  }\n\n  /**\n   * Clear results.\n   */\n  public clearData() {\n    this._results = new PagedResults();\n    this._triggerResultsChange();\n\n    this._state.dataLoaded = false;\n    this._triggerStateChange();\n  }\n\n  private _clearPageSubscription() {\n    if (this._pageObsSubscription) {\n      this._pageObsSubscription.unsubscribe();\n      this._pageObsSubscription = null;\n\n      this._state.inFlight = false;\n      this._triggerStateChange();\n    }\n  }\n\n  /**\n   * Request next page of data.\n   *\n   * If it is first page, it will replace results.\n   * If results are still in flight when this is called, the previous one will be canceled.\n   */\n  public getNextPage() {\n\n    this._clearPageSubscription();\n\n    this._state.errored = false;\n    this._triggerStateChange();\n\n    const nextPage = this._currentPage + 1;\n\n    this._pageObsSubscription = this._getPageFn(nextPage, this._perPage)\n      .subscribe(\n        (data) => {\n          this._clearPageSubscription();\n\n          if (data.page !== nextPage) {\n            // panic, should not happen\n            // raise an error and discard the result\n            this.errorObservable.next(new Error(`Expected page no ${nextPage} instead got page no ${data.page}`));\n            return;\n          }\n\n          this._currentPage = data.page;\n\n          // Replace entire result if it was first page otherwise concatenate received entities\n          // reset flag switchInProgress when first page of data is arrived\n          if (data.page === 1) {\n            this._results = data;\n            this._state.switchInProgress = false;\n            this._triggerStateChange();\n          } else {\n            this._results.total = data.total;\n            this._results.page = data.page;\n            this._results.entities = this._results.entities.concat(data.entities);\n          }\n\n          this._triggerResultsChange();\n\n          this._state.dataLoaded = true;\n          this._triggerStateChange();\n        },\n        (err) => {\n          this._clearPageSubscription();\n          this._state.errored = true;\n          this._triggerStateChange();\n          this.errorObservable.next(err);\n        });\n\n    this._state.inFlight = true;\n    this._triggerStateChange();\n  }\n\n  private _triggerResultsChange() {\n    this.resultsObservable.next(this._results);\n  }\n\n  private _triggerStateChange(): void {\n    this.stateObservable.next(this._state);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InFlightState.html":{"url":"classes/InFlightState.html","title":"class - InFlightState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InFlightState\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inflight/inflight-state.ts\n        \n\n            \n                Description\n            \n            \n                Represents current state of InFlight\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dataLoaded\n                                    \n                                    \n                                        errored\n                                    \n                                    \n                                        inFlight\n                                    \n                                    \n                                        switchInProgress\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dataLoaded\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dataLoaded:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight-state.ts:13\n                                        \n                                    \n            \n                            \n                                \n                                    Will be set when at least one page of results are available.\n            It will be set even if zero entities were received.\n            This flag will help in distinguishing empty data from\n            the state when no data is loaded yet.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        errored\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    errored:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight-state.ts:28\n                                        \n                                    \n            \n                            \n                                \n                                    Will be set when an error is raised while fetching results.\n            It will be reset when making a new request.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        inFlight\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    inFlight:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight-state.ts:20\n                                        \n                                    \n            \n                            \n                                \n                                    Will be set when request is in in-flight.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        switchInProgress\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    switchInProgress:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/inflight/inflight-state.ts:37\n                                        \n                                    \n            \n                            \n                                \n                                    Will be set when when data source/criteria is changing.\n            This can be used to indicate the user that current data\n            is stale or even putting a glass panel to block interaction.\n            \n                                \n                            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class InFlightState {\n  /**\n   * Will be set when at least one page of results are available.\n   * It will be set even if zero entities were received.\n   * This flag will help in distinguishing empty data from\n   * the state when no data is loaded yet.\n   *\n   * @type {boolean}\n   */\n  dataLoaded = false;\n\n  /**\n   * Will be set when request is in in-flight.\n   *\n   * @type {boolean}\n   */\n  inFlight = false;\n\n  /**\n   * Will be set when an error is raised while fetching results.\n   * It will be reset when making a new request.\n   *\n   * @type {boolean}\n   */\n  errored = false;\n\n  /**\n   * Will be set when when data source/criteria is changing.\n   * This can be used to indicate the user that current data\n   * is stale or even putting a glass panel to block interaction.\n   *\n   * @type {boolean}\n   */\n  switchInProgress = false;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedResults.html":{"url":"classes/PagedResults.html","title":"class - PagedResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedResults\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/paged-results.ts\n        \n\n            \n                Description\n            \n            \n                Results\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        entities\n                                    \n                                    \n                                        page\n                                    \n                                    \n                                        total\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(total: number, page: number, entities: any[])\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/interfaces/paged-results.ts:19\n                                        \n                                    \n            \n                            \n                                \n                                        Create new instance\n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              total\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              page\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              entities\n                                                              \n                                                                        any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        entities\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    entities:     any[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/interfaces/paged-results.ts:19\n                                        \n                                    \n            \n                            \n                                \n                                    Array of entities\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        page\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    page:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/interfaces/paged-results.ts:14\n                                        \n                                    \n            \n                            \n                                \n                                    Number of pages loaded.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        total\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    total:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/interfaces/paged-results.ts:9\n                                        \n                                    \n            \n                            \n                                \n                                    Total number of entities, not all of these may have been loaded.\n            Check entities.length to get number of entities loaded.\n            \n                                \n                            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class PagedResults {\n  /**\n   * Total number of entities, not all of these may have been loaded.\n   * Check `entities.length` to get number of entities loaded.\n   */\n  total: number;\n\n  /**\n   * Number of pages loaded.\n   */\n  page: number;\n\n  /**\n   * Array of entities\n   */\n  entities: any[];\n\n  /**\n   * Create new instance\n   *\n   * @param {number} total\n   * @param {number} page\n   * @param {any[]} entities\n   */\n  constructor(total: number = null, page: number = null, entities: any[] = []) {\n    this.total = total;\n    this.page = page;\n    this.entities = entities;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPageFunc.html":{"url":"interfaces/GetPageFunc.html","title":"interface - GetPageFunc","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetPageFunc\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inflight/get-page-func.ts\n        \n\n            \n                Description\n            \n            \n                Function template to fetch data\nThe function will receive pageNumber and perPage.\nIt needs to return an Observable that will yield PagedResults.\nThis will typically be Angular HTTP get call, followed by map.\nTo add timeout and retry, use standard RxJS techniques at this stage.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [page: number, perPage: number]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     Observable\n\n                                        \n                                    \n\n                                    \n                                        \n                                          \n                                                  Parameters :\n                                                  \n                                                      \n                                                          \n                                                              Name\n                                                              Type\n                                                              Description\n                                                          \n                                                      \n                                                      \n                                                              \n                                                                page\n                                                                \n                                                                \n                                                                \n                                                              \n                                                              \n                                                                perPage\n                                                                \n                                                                \n                                                                \n                                                              \n                                                      \n                                                  \n                                          \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Defined in src/app/inflight/get-page-func.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    The function will receive pageNumber and perPage.\nIt needs to return an Observable that will yield PagedResults.\nThis will typically be Angular HTTP get call, followed by map.\nTo add timeout and retry, use standard RxJS techniques at this stage.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs/Observable';\nimport {PagedResults} from '../interfaces/paged-results';\n\n/**\n * Function template to fetch data\n *\n * The function will receive `pageNumber` and `perPage`.\n * It needs to return an `Observable` that will yield {@link PagedResults}.\n * This will typically be Angular HTTP `get` call, followed by `map`.\n * To add timeout and retry, use standard RxJS techniques at this stage.\n */\nexport interface GetPageFunc {\n  /**\n   * The function will receive `pageNumber` and `perPage`.\n   * It needs to return an `Observable` that will yield {@link PagedResults}.\n   * This will typically be Angular HTTP `get` call, followed by `map`.\n   * To add timeout and retry, use standard RxJS techniques at this stage.\n   *\n   * @param {number} page\n   * @param {number} perPage\n   * @returns {Observable}\n   */\n  (page: number, perPage: number): Observable;\n}\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/inflight/get-page-func.ts\n            \n            \n                interface\n            \n            \n                GetPageFunc\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/inflight/inflight-state.ts\n            \n            \n                class\n            \n            \n                InFlightState\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/inflight/inflight.ts\n            \n            \n                class\n            \n            \n                InFlight\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/interfaces/paged-results.ts\n            \n            \n                class\n            \n            \n                PagedResults\n            \n            \n                100 %\n                (5/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
